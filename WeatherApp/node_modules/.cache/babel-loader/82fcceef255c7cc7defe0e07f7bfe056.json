{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport Titles from './components/title';\nimport Forms from './components/forms';\nimport Weather from './components/weather';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getweather = async function fetchAsync(e) {\n      const city = e.target.city.value;\n      const country = e.target.country.value; // await response of fetch call\n\n      const response = await fetch('http://api.openweathermap.org/data/2.5/weather?q=greenfield,usa&APPID=14b174dcab9bf47b49468e07daa1ff87'); //let response = await fetch('http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=14b174dcab9bf47b49468e07daa1ff87');\n      // only proceed once promise is resolved\n\n      const results = await response.json();\n      console.log(response);\n      console.log(results.name);\n      console.log(results.main.temp);\n      console.log(results.sys.country); // e.preventDefault();\n\n      this.setState({\n        temperature: results.main.temp,\n        city: results.name,\n        country: results.sys.country\n      });\n    };\n\n    this.state = {\n      WeatherResults: [{\n        temperature: 0\n      }, {\n        city: \" \"\n      }, {\n        country: \" \"\n      }]\n    };\n  } // async function\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Titles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Forms, {\n      loadWeather: this.getweather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      WeatherCompCity: this.state.city,\n      WeatherCompCountry: this.state.country,\n      WeatherCompTemp: this.state.temperature,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\bob\\Documents\\Visual Studio 2015\\Projects\\my-app\\src\\App.js"],"names":["React","Titles","Forms","Weather","App","Component","constructor","props","getweather","fetchAsync","e","city","target","value","country","response","fetch","results","json","console","log","name","main","temp","sys","setState","temperature","state","WeatherResults","render"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAKA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAG9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAwBnBC,UAxBmB,GAwBN,eAAeC,UAAf,CAA0BC,CAA1B,EAA6B;AAM1C,YAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAAT,CAAcE,KAA3B;AACA,YAAMC,OAAO,GAAGJ,CAAC,CAACE,MAAF,CAASE,OAAT,CAAiBD,KAAjC,CAP0C,CAQ1C;;AACA,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,wGAAD,CAA5B,CAT0C,CAU1C;AACA;;AACA,YAAMC,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACI,IAApB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACK,IAAR,CAAaC,IAAzB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACO,GAAR,CAAYV,OAAxB,EAhB0C,CAkB3C;;AACA,WAAKW,QAAL,CAAe;AACdC,QAAAA,WAAW,EAAET,OAAO,CAACK,IAAR,CAAaC,IADZ;AAEdZ,QAAAA,IAAI,EAAEM,OAAO,CAACI,IAFA;AAGdP,QAAAA,OAAO,EAAEG,OAAO,CAACO,GAAR,CAAYV;AAHP,OAAf;AAQF,KAnDsB;;AAEf,SAAKa,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE,CAEZ;AAAEF,QAAAA,WAAW,EAAE;AAAf,OAFY,EAGZ;AAAEf,QAAAA,IAAI,EAAE;AAAR,OAHY,EAIZ;AAAEG,QAAAA,OAAO,EAAE;AAAX,OAJY;AADP,KAAb;AAeH,GApB6B,CA0BlC;;;AAgCIe,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAE,KAAKrB,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,OAAD;AAAS,MAAA,eAAe,EAAI,KAAKmB,KAAL,CAAWhB,IAAvC;AACS,MAAA,kBAAkB,EAAI,KAAKgB,KAAL,CAAWb,OAD1C;AAES,MAAA,eAAe,EAAI,KAAKa,KAAL,CAAWD,WAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAYH;;AAvE6B;;AAyElC,eAAetB,GAAf","sourcesContent":["\r\nimport React from 'react';\r\nimport Titles from './components/title'\r\nimport Forms from './components/forms'\r\nimport Weather from './components/weather'\r\n\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            WeatherResults: [\r\n\r\n                { temperature: 0},\r\n                { city: \" \" },\r\n                { country: \" \" }\r\n\r\n\r\n            ]\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n// async function\r\n    getweather = async function fetchAsync(e) {\r\n \r\n    \r\n\r\n    \r\n\r\n    const city = e.target.city.value\r\n    const country = e.target.country.value\r\n    // await response of fetch call\r\n    const response = await fetch('http://api.openweathermap.org/data/2.5/weather?q=greenfield,usa&APPID=14b174dcab9bf47b49468e07daa1ff87')\r\n    //let response = await fetch('http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=14b174dcab9bf47b49468e07daa1ff87');\r\n    // only proceed once promise is resolved\r\n    const results = await response.json(); \r\n    console.log(response);\r\n    console.log(results.name);\r\n    console.log(results.main.temp);\r\n    console.log(results.sys.country);\r\n\r\n   // e.preventDefault();\r\n   this.setState ({\r\n    temperature: results.main.temp,\r\n    city: results.name,\r\n    country: results.sys.country\r\n\r\n}); \r\n\r\n \r\n}\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Titles />\r\n                <Forms loadWeather={this.getweather} />\r\n                <Weather WeatherCompCity = {this.state.city} \r\n                         WeatherCompCountry = {this.state.country}\r\n                         WeatherCompTemp = {this.state.temperature}\r\n                       />\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}