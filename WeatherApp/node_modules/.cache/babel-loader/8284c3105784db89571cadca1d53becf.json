{"ast":null,"code":"var _jsxFileName = \"C:\\\\scratch\\\\projects\\\\SmallReactApps\\\\WeatherApp\\\\src\\\\components\\\\weather.js\";\n//error pic\nimport opps from \"../PICS/opps.gif\"; //fade effect for weather comp\n\nimport Fade from \"react-reveal/Zoom\";\nimport ReactTooltip from \"react-tooltip\";\nimport React from \"react\"; //another effect for the error comp.\n\nimport { Transition } from \"react-transition-group\"; //CSS styles for effect when the comp enters the various phases\n\nconst phases = {\n  entered: {\n    opacity: 1\n  },\n  entering: {\n    opacity: 0\n  },\n  exited: {\n    opacity: 0\n  },\n  exiting: {\n    opacity: 1\n  }\n};\nexport default function Weather(props) {\n  //returns this div if API returns error\n  if (props.WeatherCompError) {\n    return React.createElement(Transition, {\n      in: props.in,\n      appear: true,\n      timeout: 500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, status => React.createElement(\"div\", {\n      className: \"animation\",\n      style: phases[status],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"WeathStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"left\",\n      style: {\n        marginTop: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, props.WeatherCompError && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, props.WeatherCompError, \" \")), React.createElement(\"div\", {\n      id: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: opps,\n      width: \"100%\",\n      height: \"100%\",\n      alt: \"opps img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })))))); //else if it returns datas, it strctures it accordly\n  } else if (props.WeatherCompCity) {\n    //declares table for 5 day weather\n    let table = []; //pushes out header\n\n    table.push(React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \" \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"5 Day Hourly Weather Report \"))); //keeps track when the day changes\n\n    var PrevDay; //stores data for the day\n\n    let row = []; //keeps count of number of rows\n\n    let RowCounter; //dictionary of months to convert from 01 to January.\n\n    var months = {\n      \"01\": \"Jan\",\n      \"02\": \"Feb\",\n      \"03\": \"Mar\",\n      \"04\": \"Apr\",\n      \"05\": \"May\",\n      \"06\": \"Jun\",\n      \"07\": \"Jul\",\n      \"08\": \"Aug\",\n      \"09\": \"Sep\",\n      \"10\": \"Oct\",\n      \"11\": \"Nov\",\n      \"12\": \"Dec\"\n    }; //loops through the hourly data and formats it\n\n    {\n      props.WeatherFiveDay.map(function (day, index) {\n        //gets ICON based on the hour\n        var IconUrl = \"https://openweathermap.org/img/wn/\" + day.weather[0].icon + \"@2x.png\"; // breaks row if the day changes or first day of index\n\n        if (props.WeatherFiveDay[index].dt_txt.substring(8, 10) !== PrevDay || index === 39) {\n          //sets previous day\n          PrevDay = props.WeatherFiveDay[index].dt_txt.substring(8, 10); //counts the number of rows inserted\n\n          RowCounter = RowCounter + 1; //adds row to table\n\n          table.push(React.createElement(\"div\", {\n            className: \"row\",\n            key: RowCounter,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, row)); //clears out row\n\n          row = []; //adds first hourly report with date to row\n\n          row.push(React.createElement(\"div\", {\n            key: index,\n            className: \"col\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"flex-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            id: \"WeathDateleft\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, months[day.dt_txt.substring(5, 7)], \" \", day.dt_txt.substring(8, 10)), React.createElement(\"div\", {\n            id: \"left\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, \" \", Math.round(Number(((day.main.temp - 273.15) * 9 / 5 + 32).toFixed(2))), \" \", \"F \", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }), day.dt_txt.substring(11, 16), \" \")), React.createElement(\"div\", {\n            id: \"right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: IconUrl,\n            \"data-rh\": \"Top\",\n            \"data-place\": \"top\",\n            \"data-tip\": day.weather[0].description,\n            alt: \"weather icon\",\n            title: day.weather[0].description,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          })))));\n        } else {\n          //adds just the time, temp, and weather icon to row\n          row.push(React.createElement(\"div\", {\n            key: index,\n            className: \"col\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"flex-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            id: \"left\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          }, \" \", Math.round(Number(((day.main.temp - 273.15) * 9 / 5 + 32).toFixed(2))), \" \", \"F \", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155\n            },\n            __self: this\n          }), day.dt_txt.substring(11, 16), \" \")), React.createElement(\"div\", {\n            id: \"right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: IconUrl,\n            \"data-rh\": \"Top\",\n            \"data-place\": \"top\",\n            \"data-tip\": day.weather[0].description,\n            alt: \"weather icon\",\n            title: day.weather[0].description,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 160\n            },\n            __self: this\n          })))));\n        }\n      });\n    }\n    return (//defines the whole strcture of the weather component\n      React.createElement(Fade, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        \"data-tut\": \"reactour__CurrentWeather\",\n        className: \"WeathStyle center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, props.WeatherCompCity && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, props.WeatherCompCity, \", \", props.WeatherCompCountry, \" Current Weather\"), React.createElement(\"div\", {\n        className: \"flex-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, props.WeatherCompTemp && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, props.WeatherCompTemp, \" F\"), props.WeatherCompDesc && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \" \", props.WeatherCompDesc)), React.createElement(\"div\", {\n        id: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, props.WeatherCompIcon && React.createElement(\"img\", {\n        src: props.WeatherCompIcon,\n        alt: \"weather icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"WeathStyle5Day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(ReactTooltip, {\n        effect: \"solid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), table)))\n    );\n  } else {\n    return null;\n  }\n}","map":{"version":3,"sources":["C:\\scratch\\projects\\SmallReactApps\\WeatherApp\\src\\components\\weather.js"],"names":["opps","Fade","ReactTooltip","React","Transition","phases","entered","opacity","entering","exited","exiting","Weather","props","WeatherCompError","in","status","marginTop","WeatherCompCity","table","push","PrevDay","row","RowCounter","months","WeatherFiveDay","map","day","index","IconUrl","weather","icon","dt_txt","substring","Math","round","Number","main","temp","toFixed","description","WeatherCompCountry","WeatherCompTemp","WeatherCompDesc","WeatherCompIcon"],"mappings":";AAAA;AACA,OAAOA,IAAP,MAAiB,kBAAjB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,OAAOC,YAAP,MAAyB,eAAzB;AAEA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,UAAT,QAA2B,wBAA3B,C,CAEA;;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AADF,GADI;AAIbC,EAAAA,QAAQ,EAAE;AACRD,IAAAA,OAAO,EAAE;AADD,GAJG;AAObE,EAAAA,MAAM,EAAE;AACNF,IAAAA,OAAO,EAAE;AADH,GAPK;AAUbG,EAAAA,OAAO,EAAE;AACPH,IAAAA,OAAO,EAAE;AADF;AAVI,CAAf;AAeA,eAAe,SAASI,OAAT,CAAiBC,KAAjB,EAAwB;AACrC;AACA,MAAIA,KAAK,CAACC,gBAAV,EAA4B;AAC1B,WACE,oBAAC,UAAD;AAAY,MAAA,EAAE,EAAED,KAAK,CAACE,EAAtB;AAA0B,MAAA,MAAM,MAAhC;AAAiC,MAAA,OAAO,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIC,MAAD,IACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAEV,MAAM,CAACU,MAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAe,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,KAAK,CAACC,gBAAN,IAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,KAAK,CAACC,gBAAV,MAD7B,CADF,EAIE;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEb,IAAV;AAAgB,MAAA,KAAK,EAAC,MAAtB;AAA6B,MAAA,MAAM,EAAC,MAApC;AAA2C,MAAA,GAAG,EAAC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADF,CADF,CAFJ,CADF,CAD0B,CAoB1B;AACD,GArBD,MAqBO,IAAIY,KAAK,CAACK,eAAV,EAA2B;AAChC;AACA,QAAIC,KAAK,GAAG,EAAZ,CAFgC,CAGhC;;AACAA,IAAAA,KAAK,CAACC,IAAN,CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFF,CADF,EAJgC,CAUhC;;AACA,QAAIC,OAAJ,CAXgC,CAYhC;;AACA,QAAIC,GAAG,GAAG,EAAV,CAbgC,CAchC;;AACA,QAAIC,UAAJ,CAfgC,CAgBhC;;AACA,QAAIC,MAAM,GAAG;AACX,YAAM,KADK;AAEX,YAAM,KAFK;AAGX,YAAM,KAHK;AAIX,YAAM,KAJK;AAKX,YAAM,KALK;AAMX,YAAM,KANK;AAOX,YAAM,KAPK;AAQX,YAAM,KARK;AASX,YAAM,KATK;AAUX,YAAM,KAVK;AAWX,YAAM,KAXK;AAYX,YAAM;AAZK,KAAb,CAjBgC,CA+BhC;;AACA;AACEX,MAAAA,KAAK,CAACY,cAAN,CAAqBC,GAArB,CAAyB,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AAC7C;AACA,YAAIC,OAAO,GACT,uCACAF,GAAG,CAACG,OAAJ,CAAY,CAAZ,EAAeC,IADf,GAEA,SAHF,CAF6C,CAO7C;;AACA,YACElB,KAAK,CAACY,cAAN,CAAqBG,KAArB,EAA4BI,MAA5B,CAAmCC,SAAnC,CAA6C,CAA7C,EAAgD,EAAhD,MAAwDZ,OAAxD,IACAO,KAAK,KAAK,EAFZ,EAGE;AACA;AACAP,UAAAA,OAAO,GAAGR,KAAK,CAACY,cAAN,CAAqBG,KAArB,EAA4BI,MAA5B,CAAmCC,SAAnC,CAA6C,CAA7C,EAAgD,EAAhD,CAAV,CAFA,CAGA;;AACAV,UAAAA,UAAU,GAAGA,UAAU,GAAG,CAA1B,CAJA,CAKA;;AACAJ,UAAAA,KAAK,CAACC,IAAN,CACE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAqB,YAAA,GAAG,EAAEG,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGD,GADH,CADF,EANA,CAWA;;AACAA,UAAAA,GAAG,GAAG,EAAN,CAZA,CAcA;;AACAA,UAAAA,GAAG,CAACF,IAAJ,CACE;AAAK,YAAA,GAAG,EAAEQ,KAAV;AAAiB,YAAA,SAAS,EAAC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGJ,MAAM,CAACG,GAAG,CAACK,MAAJ,CAAWC,SAAX,CAAqB,CAArB,EAAwB,CAAxB,CAAD,CADT,EACuC,GADvC,EAEGN,GAAG,CAACK,MAAJ,CAAWC,SAAX,CAAqB,CAArB,EAAwB,EAAxB,CAFH,CADF,EAKE;AAAK,YAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG,GADH,EAEGC,IAAI,CAACC,KAAL,CACCC,MAAM,CACJ,CAAE,CAACT,GAAG,CAACU,IAAJ,CAASC,IAAT,GAAgB,MAAjB,IAA2B,CAA5B,GAAiC,CAAjC,GAAqC,EAAtC,EAA0CC,OAA1C,CAAkD,CAAlD,CADI,CADP,CAFH,EAMK,GANL,QAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,EAQGZ,GAAG,CAACK,MAAJ,CAAWC,SAAX,CAAqB,EAArB,EAAyB,EAAzB,CARH,EAQiC,GARjC,CADF,CALF,EAiBE;AAAK,YAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AACE,YAAA,GAAG,EAAEJ,OADP;AAEE,uBAAQ,KAFV;AAGE,0BAAW,KAHb;AAIE,wBAAUF,GAAG,CAACG,OAAJ,CAAY,CAAZ,EAAeU,WAJ3B;AAKE,YAAA,GAAG,EAAC,cALN;AAME,YAAA,KAAK,EAAEb,GAAG,CAACG,OAAJ,CAAY,CAAZ,EAAeU,WANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAjBF,CADF,CADF;AAgCD,SAlDD,MAkDO;AACL;AACAlB,UAAAA,GAAG,CAACF,IAAJ,CACE;AAAK,YAAA,GAAG,EAAEQ,KAAV;AAAiB,YAAA,SAAS,EAAC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG,GADH,EAEGM,IAAI,CAACC,KAAL,CACCC,MAAM,CACJ,CAAE,CAACT,GAAG,CAACU,IAAJ,CAASC,IAAT,GAAgB,MAAjB,IAA2B,CAA5B,GAAiC,CAAjC,GAAqC,EAAtC,EAA0CC,OAA1C,CAAkD,CAAlD,CADI,CADP,CAFH,EAMK,GANL,QAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,EAQGZ,GAAG,CAACK,MAAJ,CAAWC,SAAX,CAAqB,EAArB,EAAyB,EAAzB,CARH,EAQiC,GARjC,CADF,CADF,EAaE;AAAK,YAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AACE,YAAA,GAAG,EAAEJ,OADP;AAEE,uBAAQ,KAFV;AAGE,0BAAW,KAHb;AAIE,wBAAUF,GAAG,CAACG,OAAJ,CAAY,CAAZ,EAAeU,WAJ3B;AAKE,YAAA,GAAG,EAAC,cALN;AAME,YAAA,KAAK,EAAEb,GAAG,CAACG,OAAJ,CAAY,CAAZ,EAAeU,WANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAbF,CADF,CADF;AA4BD;AACF,OAzFD;AA0FD;AAED,WACE;AACA,0BAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,oBAAS,0BADX;AAEE,QAAA,SAAS,EAAC,mBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG3B,KAAK,CAACK,eAAN,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGL,KAAK,CAACK,eADT,QAC4BL,KAAK,CAAC4B,kBADlC,qBAFJ,EAOE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG5B,KAAK,CAAC6B,eAAN,IAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI7B,KAAK,CAAC6B,eAAV,OAD5B,EAEG7B,KAAK,CAAC8B,eAAN,IAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAK9B,KAAK,CAAC8B,eAAX,CAF5B,CADF,EAKE;AAAK,QAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG9B,KAAK,CAAC+B,eAAN,IACC;AAAK,QAAA,GAAG,EAAE/B,KAAK,CAAC+B,eAAhB;AAAiC,QAAA,GAAG,EAAC,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CALF,CAPF,CAJF,CADF,EA0BE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,MAAM,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEGzB,KAFH,CA1BF,CADF;AAFF;AAoCD,GAjKM,MAiKA;AACL,WAAO,IAAP;AACD;AACF","sourcesContent":["//error pic\r\nimport opps from \"../PICS/opps.gif\";\r\n//fade effect for weather comp\r\nimport Fade from \"react-reveal/Zoom\";\r\n\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nimport React from \"react\";\r\n//another effect for the error comp.\r\nimport { Transition } from \"react-transition-group\";\r\n\r\n//CSS styles for effect when the comp enters the various phases\r\nconst phases = {\r\n  entered: {\r\n    opacity: 1,\r\n  },\r\n  entering: {\r\n    opacity: 0,\r\n  },\r\n  exited: {\r\n    opacity: 0,\r\n  },\r\n  exiting: {\r\n    opacity: 1,\r\n  },\r\n};\r\n\r\nexport default function Weather(props) {\r\n  //returns this div if API returns error\r\n  if (props.WeatherCompError) {\r\n    return (\r\n      <Transition in={props.in} appear timeout={500}>\r\n        {(status) => (\r\n          <div className=\"animation\" style={phases[status]}>\r\n            <div className=\"WeathStyle\">\r\n              <div className=\"flex-container\">\r\n                <div id=\"left\" style={{ marginTop: \"50px\" }}>\r\n                  {props.WeatherCompError && <p>{props.WeatherCompError} </p>}\r\n                </div>\r\n                <div id=\"right\">\r\n                  <img src={opps} width=\"100%\" height=\"100%\" alt=\"opps img\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Transition>\r\n    );\r\n\r\n    //else if it returns datas, it strctures it accordly\r\n  } else if (props.WeatherCompCity) {\r\n    //declares table for 5 day weather\r\n    let table = [];\r\n    //pushes out header\r\n    table.push(\r\n      <div>\r\n        {\" \"}\r\n        <h3>5 Day Hourly Weather Report </h3>\r\n      </div>\r\n    );\r\n    //keeps track when the day changes\r\n    var PrevDay;\r\n    //stores data for the day\r\n    let row = [];\r\n    //keeps count of number of rows\r\n    let RowCounter;\r\n    //dictionary of months to convert from 01 to January.\r\n    var months = {\r\n      \"01\": \"Jan\",\r\n      \"02\": \"Feb\",\r\n      \"03\": \"Mar\",\r\n      \"04\": \"Apr\",\r\n      \"05\": \"May\",\r\n      \"06\": \"Jun\",\r\n      \"07\": \"Jul\",\r\n      \"08\": \"Aug\",\r\n      \"09\": \"Sep\",\r\n      \"10\": \"Oct\",\r\n      \"11\": \"Nov\",\r\n      \"12\": \"Dec\",\r\n    };\r\n    //loops through the hourly data and formats it\r\n    {\r\n      props.WeatherFiveDay.map(function (day, index) {\r\n        //gets ICON based on the hour\r\n        var IconUrl =\r\n          \"https://openweathermap.org/img/wn/\" +\r\n          day.weather[0].icon +\r\n          \"@2x.png\";\r\n\r\n        // breaks row if the day changes or first day of index\r\n        if (\r\n          props.WeatherFiveDay[index].dt_txt.substring(8, 10) !== PrevDay ||\r\n          index === 39\r\n        ) {\r\n          //sets previous day\r\n          PrevDay = props.WeatherFiveDay[index].dt_txt.substring(8, 10);\r\n          //counts the number of rows inserted\r\n          RowCounter = RowCounter + 1;\r\n          //adds row to table\r\n          table.push(\r\n            <div className=\"row\" key={RowCounter}>\r\n              {row}\r\n            </div>\r\n          );\r\n          //clears out row\r\n          row = [];\r\n\r\n          //adds first hourly report with date to row\r\n          row.push(\r\n            <div key={index} className=\"col\">\r\n              <div className=\"flex-container\">\r\n                <div id=\"WeathDateleft\">\r\n                  {months[day.dt_txt.substring(5, 7)]}{\" \"}\r\n                  {day.dt_txt.substring(8, 10)}\r\n                </div>\r\n                <div id=\"left\">\r\n                  <p>\r\n                    {\" \"}\r\n                    {Math.round(\r\n                      Number(\r\n                        (((day.main.temp - 273.15) * 9) / 5 + 32).toFixed(2)\r\n                      )\r\n                    )}{\" \"}\r\n                    F <br></br>\r\n                    {day.dt_txt.substring(11, 16)}{\" \"}\r\n                  </p>\r\n                </div>\r\n                <div id=\"right\">\r\n                  <img\r\n                    src={IconUrl}\r\n                    data-rh=\"Top\"\r\n                    data-place=\"top\"\r\n                    data-tip={day.weather[0].description}\r\n                    alt=\"weather icon\"\r\n                    title={day.weather[0].description}\r\n                  ></img>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        } else {\r\n          //adds just the time, temp, and weather icon to row\r\n          row.push(\r\n            <div key={index} className=\"col\">\r\n              <div className=\"flex-container\">\r\n                <div id=\"left\">\r\n                  <p>\r\n                    {\" \"}\r\n                    {Math.round(\r\n                      Number(\r\n                        (((day.main.temp - 273.15) * 9) / 5 + 32).toFixed(2)\r\n                      )\r\n                    )}{\" \"}\r\n                    F <br></br>\r\n                    {day.dt_txt.substring(11, 16)}{\" \"}\r\n                  </p>\r\n                </div>\r\n                <div id=\"right\">\r\n                  <img\r\n                    src={IconUrl}\r\n                    data-rh=\"Top\"\r\n                    data-place=\"top\"\r\n                    data-tip={day.weather[0].description}\r\n                    alt=\"weather icon\"\r\n                    title={day.weather[0].description}\r\n                  ></img>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n      });\r\n    }\r\n\r\n    return (\r\n      //defines the whole strcture of the weather component\r\n      <Fade>\r\n        <div>\r\n          <div\r\n            data-tut=\"reactour__CurrentWeather\"\r\n            className=\"WeathStyle center\"\r\n          >\r\n            <div>\r\n              {props.WeatherCompCity && (\r\n                <p>\r\n                  {props.WeatherCompCity}, {props.WeatherCompCountry} Current\r\n                  Weather\r\n                </p>\r\n              )}\r\n              <div className=\"flex-container\">\r\n                <div id=\"left\">\r\n                  {props.WeatherCompTemp && <p>{props.WeatherCompTemp} F</p>}\r\n                  {props.WeatherCompDesc && <p> {props.WeatherCompDesc}</p>}\r\n                </div>\r\n                <div id=\"right\">\r\n                  {props.WeatherCompIcon && (\r\n                    <img src={props.WeatherCompIcon} alt=\"weather icon\"></img>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"WeathStyle5Day\">\r\n            <ReactTooltip effect=\"solid\" />\r\n            {table}\r\n          </div>\r\n        </div>\r\n      </Fade>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}