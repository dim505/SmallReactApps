{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport Titles from './components/title';\nimport Forms from './components/forms';\nimport Weather from './components/weather';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getweather = async function fetchAsync(e) {\n      e.preventDefault();\n      const city = e.target.city.value;\n      const country = e.target.country.value;\n      const URL = 'https://api.openweathermap.org/data/2.5/weather?q=' + city + ',' + country + '&APPID=14b174dcab9bf47b49468e07daa1ff87'; // await response of fetch call\n\n      const response = await fetch(URL);\n      const results = await response.json(); //console.log(results)\n\n      console.log();\n      console.log();\n\n      if (city && country && response.status !== 404) {\n        const temp = Number(((results.main.temp - 273.15) * 9 / 5 + 32).toFixed(2));\n        console.log(typeof temp);\n        this.setState({\n          error: \"\",\n          temperature: temp,\n          city: results.name,\n          country: results.sys.country,\n          lat: results.coord.lat,\n          lon: results.coord.lon\n        });\n      } else {\n        const ErrMsg = 'Opps!! Something went wrong. Please ensure both fields are filled out and are valid entities';\n        await this.setState({\n          error: ErrMsg,\n          temperature: \"\",\n          city: \"\",\n          country: \"\"\n        });\n      }\n\n      console.log(this.state.error);\n    };\n\n    this.getweather = this.getweather.bind(this);\n    this.state = {\n      error: undefined,\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      lat: undefined,\n      lon: undefined\n    };\n  } // async function\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Titles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Forms, {\n      loadWeather: this.getweather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      WeatherCompError: this.state.error,\n      WeatherCompCity: this.state.city,\n      WeatherCompCountry: this.state.country,\n      WeatherCompTemp: this.state.temperature,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\bob\\Documents\\Visual Studio 2015\\Projects\\my-app\\src\\App.js"],"names":["React","Titles","Forms","Weather","App","Component","constructor","props","getweather","fetchAsync","e","preventDefault","city","target","value","country","URL","response","fetch","results","json","console","log","status","temp","Number","main","toFixed","setState","error","temperature","name","sys","lat","coord","lon","ErrMsg","state","bind","undefined","render"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport Titles from './components/title'\r\nimport Forms from './components/forms'\r\nimport Weather from './components/weather'\r\n\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.getweather = this.getweather.bind(this)\r\n        this.state = {\r\n                 error: undefined,\r\n                 temperature: undefined,\r\n                 city: undefined,\r\n                 country: undefined,\r\n                 lat : undefined,\r\n                lon: undefined\r\n\r\n        } \r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n// async function\r\n    getweather = async function fetchAsync(e) {\r\n \r\n    \r\n\r\n        e.preventDefault();\r\n\r\n    const city = e.target.city.value\r\n    const country = e.target.country.value\r\n    const URL = 'https://api.openweathermap.org/data/2.5/weather?q=' + city + ',' + country + '&APPID=14b174dcab9bf47b49468e07daa1ff87'\r\n    // await response of fetch call\r\n    const response = await fetch(URL);\r\n    const results = await response.json(); \r\n    //console.log(results)\r\n    console.log()\r\n    console.log()\r\n    \r\n    if(city && country && response.status !== 404){\r\n       \r\n    const temp = Number(( (((results.main.temp - 273.15) * 9)/5) + 32).toFixed(2))\r\n    console.log(typeof temp)\r\n\r\n    this.setState ({\r\n    error: \"\",\r\n    temperature: temp,\r\n    city: results.name,\r\n    country: results.sys.country,\r\n    lat: results.coord.lat,\r\n    lon: results.coord.lon\r\n\r\n    })\r\n\r\n\r\n\r\n} else {     \r\n    \r\n    \r\n    const ErrMsg = 'Opps!! Something went wrong. Please ensure both fields are filled out and are valid entities'\r\n    await this.setState({\r\n    error: ErrMsg,\r\n    temperature: \"\",\r\n    city: \"\",\r\n    country: \"\"\r\n     \r\n\r\n})} \r\n    console.log(this.state.error)\r\n   \r\n    \r\n \r\n}\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Titles />\r\n                <Forms loadWeather={this.getweather} />\r\n                <Weather WeatherCompError = {this.state.error}\r\n                         WeatherCompCity = {this.state.city} \r\n                         WeatherCompCountry = {this.state.country}\r\n                         WeatherCompTemp = {this.state.temperature}\r\n                       />\r\n\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}