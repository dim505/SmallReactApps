{"ast":null,"code":"import _slicedToArray from \"C:\\\\scratch\\\\projects\\\\SmallReactApps\\\\WeatherApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\scratch\\\\projects\\\\SmallReactApps\\\\WeatherApp\\\\src\\\\components\\\\title.js\";\nimport Alert from \"react-bootstrap/Alert\";\nimport React, { useState } from \"react\";\n\nfunction AlertDismissibleExample() {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        show = _useState2[0],\n        setShow = _useState2[1]; //hides alert after 50 seconds\n\n\n  if (show) {\n    setTimeout(() => {\n      setShow(false);\n    }, 50000);\n    return (//defines alert\n      React.createElement(Alert, {\n        variant: \"danger\",\n        onClose: () => setShow(false),\n        dismissible: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(Alert.Heading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Attention!!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Due to how the weather API operates, it only accepts city name and ISO code. It might return undesired results if there are multiple cities with the same name in the same country. \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), \"**Also, Geolocation is only an approximate estimation of location **\"))\n    );\n  } //returns nothing if exit button is clicked.\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  });\n}\n\nexport default function Titles() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(AlertDismissibleExample, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    id: \"header\",\n    \"data-tut\": \"reactour__Start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Welcome to My Weather App\", \" \", React.createElement(Tooltip, {\n    placement: \"bottom\",\n    tooltip: \"Click me to start the tour\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(LiveHelpOutlinedIcon, {\n    onClick: props.OpenTour,\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))), \" \", React.createElement(\"h5\", {\n    id: \"headerBody\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \" \", \"Please input the city name and ISO Code to see the weather below\", \" \"));\n}","map":{"version":3,"sources":["C:\\scratch\\projects\\SmallReactApps\\WeatherApp\\src\\components\\title.js"],"names":["Alert","React","useState","AlertDismissibleExample","show","setShow","setTimeout","Titles","props","OpenTour"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,uBAAT,GAAmC;AAAA,oBACTD,QAAQ,CAAC,IAAD,CADC;AAAA;AAAA,QAC1BE,IAD0B;AAAA,QACpBC,OADoB,kBAGjC;;;AACA,MAAID,IAAJ,EAAU;AACRE,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD,KAFS,EAEP,KAFO,CAAV;AAIA,WACE;AACA,0BAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAwB,QAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAD,CAA9C;AAAuD,QAAA,WAAW,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iMAG0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAH1C,yEAFF;AAFF;AAYD,GArBgC,CAsBjC;;;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;AAED,eAAe,SAASE,MAAT,GAAkB;AAC/B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAI,IAAA,EAAE,EAAC,QAAP;AAAgB,gBAAS,iBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAC4B,GAD5B,EAEE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,OAAO,EAAC,4BAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,oBAAD;AAAsB,IAAA,OAAO,EAAEC,KAAK,CAACC,QAArC;AAA+C,IAAA,QAAQ,EAAC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CAFF,EAOQ,GAPR,EAQE;AAAI,IAAA,EAAE,EAAC,YAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,sEAEmE,GAFnE,CARF,CADF;AAeD","sourcesContent":["import Alert from \"react-bootstrap/Alert\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction AlertDismissibleExample() {\r\n  const [show, setShow] = useState(true);\r\n\r\n  //hides alert after 50 seconds\r\n  if (show) {\r\n    setTimeout(() => {\r\n      setShow(false);\r\n    }, 50000);\r\n\r\n    return (\r\n      //defines alert\r\n      <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n        <Alert.Heading>Attention!!</Alert.Heading>\r\n        <p>\r\n          Due to how the weather API operates, it only accepts city name and ISO\r\n          code. It might return undesired results if there are multiple cities\r\n          with the same name in the same country. <br></br>\r\n          **Also, Geolocation is only an approximate estimation of location **\r\n        </p>\r\n      </Alert>\r\n    );\r\n  }\r\n  //returns nothing if exit button is clicked.\r\n  return <div></div>;\r\n}\r\n\r\nexport default function Titles() {\r\n  return (\r\n    <div>\r\n      <AlertDismissibleExample />\r\n      <h1 id=\"header\" data-tut=\"reactour__Start\">\r\n        Welcome to My Weather App{\" \"}\r\n        <Tooltip placement=\"bottom\" tooltip=\"Click me to start the tour\">\r\n          <LiveHelpOutlinedIcon onClick={props.OpenTour} fontSize=\"large\" />\r\n        </Tooltip>\r\n      </h1>{\" \"}\r\n      <h5 id=\"headerBody\">\r\n        {\" \"}\r\n        Please input the city name and ISO Code to see the weather below{\" \"}\r\n      </h5>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}