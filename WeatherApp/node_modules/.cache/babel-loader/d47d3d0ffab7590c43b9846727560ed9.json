{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport Titles from './components/title';\nimport Forms from './components/forms';\nimport Weather from './components/weather';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getweather = async function fetchAsync(e) {\n      e.preventDefault();\n      const city = e.target.city.value;\n      const country = e.target.country.value;\n      const URL = 'https://api.openweathermap.org/data/2.5/weather?q=' + city + ',' + country + '&APPID=14b174dcab9bf47b49468e07daa1ff87'; // await response of fetch call\n      //const response = await fetch('http://api.openweathermap.org/data/2.5/weather?q=greenfield,usa&APPID=14b174dcab9bf47b49468e07daa1ff87')\n\n      const response = await fetch(URL); // only proceed once promise is resolved\n\n      const results = await response.json(); // console.log(results.message);\n      // console.log(response.status); \n\n      if (city && country && response.status !== 404) {\n        results.main.temp = parseFloat((results.main.temp - 273.15) * 9 / 5 + 32).toFixed(2), await this.setState({\n          error: \"\",\n          temperature: results.main.temp,\n          city: results.name,\n          country: results.sys.country\n        });\n      } else {\n        const ErrMsg = 'Opps!! Something went wrong. Please ensure both fields are filled out and are valid entities';\n        await this.setState({\n          error: ErrMsg,\n          temperature: \"\",\n          city: \"\",\n          country: \"\"\n        });\n      }\n\n      console.log(this.state.error);\n    };\n\n    this.getweather = this.getweather.bind(this);\n    this.state = {\n      error: undefined,\n      temperature: undefined,\n      city: undefined,\n      country: undefined\n    };\n  } // async function\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Titles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Forms, {\n      loadWeather: this.getweather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      WeatherCompError: this.state.error,\n      WeatherCompCity: this.state.city,\n      WeatherCompCountry: this.state.country,\n      WeatherCompTemp: this.state.temperature,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\bob\\Documents\\Visual Studio 2015\\Projects\\my-app\\src\\App.js"],"names":["React","Titles","Forms","Weather","App","Component","constructor","props","getweather","fetchAsync","e","preventDefault","city","target","value","country","URL","response","fetch","results","json","status","main","temp","parseFloat","toFixed","setState","error","temperature","name","sys","ErrMsg","console","log","state","bind","undefined","render"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport Titles from './components/title'\r\nimport Forms from './components/forms'\r\nimport Weather from './components/weather'\r\n\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.getweather = this.getweather.bind(this)\r\n        this.state = {\r\n                 error: undefined,\r\n                 temperature: undefined,\r\n                 city: undefined,\r\n                 country: undefined\r\n          \r\n\r\n        } \r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n// async function\r\n    getweather = async function fetchAsync(e) {\r\n \r\n    \r\n\r\n        e.preventDefault();\r\n\r\n    const city = e.target.city.value\r\n    const country = e.target.country.value\r\n    const URL = 'https://api.openweathermap.org/data/2.5/weather?q=' + city + ',' + country + '&APPID=14b174dcab9bf47b49468e07daa1ff87'\r\n    // await response of fetch call\r\n    //const response = await fetch('http://api.openweathermap.org/data/2.5/weather?q=greenfield,usa&APPID=14b174dcab9bf47b49468e07daa1ff87')\r\n    const response = await fetch(URL);\r\n    // only proceed once promise is resolved\r\n    const results = await response.json(); \r\n   // console.log(results.message);\r\n   // console.log(response.status); \r\n    \r\n    if(city && country && response.status !== 404){\r\n       \r\n    results.main.temp = parseFloat(( (((results.main.temp - 273.15) * 9)/5) + 32)).toFixed(2),\r\n    await this.setState ({\r\n    error: \"\",\r\n    temperature: results.main.temp,\r\n    city: results.name,\r\n    country: results.sys.country\r\n    })\r\n\r\n\r\n\r\n} else {     \r\n    \r\n    \r\n    const ErrMsg = 'Opps!! Something went wrong. Please ensure both fields are filled out and are valid entities'\r\n    await this.setState({\r\n    error: ErrMsg,\r\n    temperature: \"\",\r\n    city: \"\",\r\n    country: \"\"\r\n     \r\n\r\n})} \r\n    console.log(this.state.error)\r\n   \r\n    \r\n \r\n}\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Titles />\r\n                <Forms loadWeather={this.getweather} />\r\n                <Weather WeatherCompError = {this.state.error}\r\n                         WeatherCompCity = {this.state.city} \r\n                         WeatherCompCountry = {this.state.country}\r\n                         WeatherCompTemp = {this.state.temperature}\r\n                       />\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}