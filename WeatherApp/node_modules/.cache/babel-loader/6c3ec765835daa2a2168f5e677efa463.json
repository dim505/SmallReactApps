{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport Titles from './components/title';\nimport Forms from './components/forms';\nimport Weather from './components/weather';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getweather = async function fetchAsync(e) {\n      debugger;\n      this.setState = {\n        temperature: undefined,\n        city: undefined,\n        country: undefined\n      };\n      const city = e.target.city.value;\n      const country = e.target.country.value; // await response of fetch call\n\n      let response = await fetch('http://api.openweathermap.org/data/2.5/weather?q=greenfield,usa&APPID=14b174dcab9bf47b49468e07daa1ff87'); //let response = await fetch('http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=14b174dcab9bf47b49468e07daa1ff87');\n      // only proceed once promise is resolved\n\n      let results = await response.json();\n      console.log(response);\n      console.log(results); // e.preventDefault();\n    };\n\n    this.state = {\n      WeatherResults: [{\n        temperature: undefined\n      }, {\n        city: undefined\n      }, {\n        country: undefined\n      }]\n    };\n  } // async function\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Titles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Forms, {\n      loadWeather: this.getweather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\bob\\Documents\\Visual Studio 2015\\Projects\\my-app\\src\\App.js"],"names":["React","Titles","Forms","Weather","App","Component","constructor","props","getweather","fetchAsync","e","setState","temperature","undefined","city","country","target","value","response","fetch","results","json","console","log","state","WeatherResults","render"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAKA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAG9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAwBnBC,UAxBmB,GAwBN,eAAeC,UAAf,CAA0BC,CAA1B,EAA6B;AACtC;AAEJ,WAAKC,QAAL,GAAgB;AACZC,QAAAA,WAAW,EAAEC,SADD;AAEZC,QAAAA,IAAI,EAAED,SAFM;AAGZE,QAAAA,OAAO,EAAEF;AAHG,OAAhB;AAQI,YAAMC,IAAI,GAAGJ,CAAC,CAACM,MAAF,CAASF,IAAT,CAAcG,KAA3B;AACA,YAAMF,OAAO,GAAGL,CAAC,CAACM,MAAF,CAASD,OAAT,CAAiBE,KAAjC,CAZsC,CAa1C;;AACA,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wGAAD,CAA1B,CAd0C,CAe1C;AACA;;AACC,UAAIC,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ,EAnByC,CAoB3C;AAIF,KAhDsB;;AAEf,SAAKI,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE,CAEZ;AAAEb,QAAAA,WAAW,EAAEC;AAAf,OAFY,EAGZ;AAAEC,QAAAA,IAAI,EAAED;AAAR,OAHY,EAIZ;AAAEE,QAAAA,OAAO,EAAEF;AAAX,OAJY;AADP,KAAb;AAeH,GApB6B,CA0BlC;;;AA6BIa,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAE,KAAKlB,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AASH;;AAjE6B;;AAmElC,eAAeJ,GAAf","sourcesContent":["\r\nimport React from 'react';\r\nimport Titles from './components/title'\r\nimport Forms from './components/forms'\r\nimport Weather from './components/weather'\r\n\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            WeatherResults: [\r\n\r\n                { temperature: undefined},\r\n                { city: undefined },\r\n                { country: undefined }\r\n\r\n\r\n            ]\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n// async function\r\n    getweather = async function fetchAsync(e) {\r\n        debugger\r\n    \r\n    this.setState = {\r\n        temperature: undefined,\r\n        city: undefined,\r\n        country: undefined\r\n\r\n    }\r\n    \r\n\r\n        const city = e.target.city.value\r\n        const country = e.target.country.value\r\n    // await response of fetch call\r\n    let response = await fetch('http://api.openweathermap.org/data/2.5/weather?q=greenfield,usa&APPID=14b174dcab9bf47b49468e07daa1ff87')\r\n    //let response = await fetch('http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=14b174dcab9bf47b49468e07daa1ff87');\r\n    // only proceed once promise is resolved\r\n     let results = await response.json(); \r\n     console.log(response);\r\n     console.log(results);\r\n   // e.preventDefault();\r\n\r\n\r\n \r\n}\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Titles />\r\n                <Forms loadWeather={this.getweather} />\r\n                <Weather />\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}