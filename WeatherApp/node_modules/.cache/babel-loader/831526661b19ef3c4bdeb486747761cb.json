{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\scratch\\\\projects\\\\SmallReactApps\\\\WeatherApp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\scratch\\\\projects\\\\SmallReactApps\\\\WeatherApp\\\\src\\\\Tooltip.js\";\nimport React from \"react\";\nimport TooltipTrigger from \"react-popper-tooltip\";\nimport \"react-popper-tooltip/dist/styles.css\";\n\nconst Tooltip = (_ref) => {\n  let children = _ref.children,\n      tooltip = _ref.tooltip,\n      hideArrow = _ref.hideArrow,\n      props = _objectWithoutProperties(_ref, [\"children\", \"tooltip\", \"hideArrow\"]);\n\n  return React.createElement(TooltipTrigger, Object.assign({}, props, {\n    tooltip: ({\n      arrowRef,\n      tooltipRef,\n      getArrowProps,\n      getTooltipProps,\n      placement\n    }) => React.createElement(\"div\", Object.assign({}, getTooltipProps({\n      ref: tooltipRef,\n      className: \"tooltip-container\"\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), !hideArrow && React.createElement(\"div\", Object.assign({}, getArrowProps({\n      ref: arrowRef,\n      className: \"tooltip-arrow\",\n      \"data-placement\": placement\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })), tooltip),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }), ({\n    getTriggerProps,\n    triggerRef\n  }) => React.createElement(\"span\", Object.assign({}, getTriggerProps({\n    ref: triggerRef,\n    className: \"trigger\"\n  }), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), children));\n};\n\nexport default Tooltip;","map":{"version":3,"sources":["C:\\scratch\\projects\\SmallReactApps\\WeatherApp\\src\\Tooltip.js"],"names":["React","TooltipTrigger","Tooltip","children","tooltip","hideArrow","props","arrowRef","tooltipRef","getArrowProps","getTooltipProps","placement","ref","className","getTriggerProps","triggerRef"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAO,sCAAP;;AAEA,MAAMC,OAAO,GAAG;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,OAAb,QAAaA,OAAb;AAAA,MAAsBC,SAAtB,QAAsBA,SAAtB;AAAA,MAAoCC,KAApC;;AAAA,SACd,oBAAC,cAAD,oBACMA,KADN;AAEE,IAAA,OAAO,EAAE,CAAC;AACRC,MAAAA,QADQ;AAERC,MAAAA,UAFQ;AAGRC,MAAAA,aAHQ;AAIRC,MAAAA,eAJQ;AAKRC,MAAAA;AALQ,KAAD,KAOP,6CACMD,eAAe,CAAC;AAClBE,MAAAA,GAAG,EAAEJ,UADa;AAElBK,MAAAA,SAAS,EAAE;AAFO,KAAD,CADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMG,CAACR,SAAD,IACC,6CACMI,aAAa,CAAC;AAChBG,MAAAA,GAAG,EAAEL,QADW;AAEhBM,MAAAA,SAAS,EAAE,eAFK;AAGhB,wBAAkBF;AAHF,KAAD,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAPJ,EAeGP,OAfH,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA4BG,CAAC;AAAEU,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,GAAD,KACC,8CACMD,eAAe,CAAC;AAClBF,IAAAA,GAAG,EAAEG,UADa;AAElBF,IAAAA,SAAS,EAAE;AAFO,GAAD,CADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMGV,QANH,CA7BJ,CADc;AAAA,CAAhB;;AA0CA,eAAeD,OAAf","sourcesContent":["import React from \"react\";\r\nimport TooltipTrigger from \"react-popper-tooltip\";\r\nimport \"react-popper-tooltip/dist/styles.css\";\r\n\r\nconst Tooltip = ({ children, tooltip, hideArrow, ...props }) => (\r\n  <TooltipTrigger\r\n    {...props}\r\n    tooltip={({\r\n      arrowRef,\r\n      tooltipRef,\r\n      getArrowProps,\r\n      getTooltipProps,\r\n      placement\r\n    }) => (\r\n      <div\r\n        {...getTooltipProps({\r\n          ref: tooltipRef,\r\n          className: \"tooltip-container\"\r\n        })}\r\n      >\r\n        {!hideArrow && (\r\n          <div\r\n            {...getArrowProps({\r\n              ref: arrowRef,\r\n              className: \"tooltip-arrow\",\r\n              \"data-placement\": placement\r\n            })}\r\n          />\r\n        )}\r\n        {tooltip}\r\n      </div>\r\n    )}\r\n  >\r\n    {({ getTriggerProps, triggerRef }) => (\r\n      <span\r\n        {...getTriggerProps({\r\n          ref: triggerRef,\r\n          className: \"trigger\"\r\n        })}\r\n      >\r\n        {children}\r\n      </span>\r\n    )}\r\n  </TooltipTrigger>\r\n);\r\n\r\nexport default Tooltip;\r\n"]},"metadata":{},"sourceType":"module"}