{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\WeatherApp\\\\src\\\\components\\\\weather.js\";\n//error pic\nimport opps from '../PICS/opps.gif'; //fade effect for weather comp\n\nimport Fade from 'react-reveal/Zoom';\nimport React from \"react\"; //another effect for the error comp.\n\nimport { Transition } from 'react-transition-group'; //CSS styles for effect when the comp enters the various phases\n\nconst phases = {\n  entered: {\n    opacity: 1\n  },\n  entering: {\n    opacity: 0\n  },\n  exited: {\n    opacity: 0\n  },\n  exiting: {\n    opacity: 1\n  }\n};\nexport default function Weather(props) {\n  //returns this div if API returns error          \n  if (props.WeatherCompError) {\n    return React.createElement(Transition, {\n      in: props.in,\n      appear: true,\n      timeout: 500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, status => React.createElement(\"div\", {\n      className: \"animation\",\n      style: phases[status],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"WeathStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"left\",\n      style: {\n        marginTop: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, props.WeatherCompError && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, props.WeatherCompError, \" \")), React.createElement(\"div\", {\n      id: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: opps,\n      width: \"100%\",\n      height: \"100%\",\n      alt: \"opps img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })))))); //else if it returns datas, it strctures it accordly\n  } else if (props.WeatherCompCity) {\n    //declares table for 5 day weather\n    let table = []; //pushes out header\n\n    table.push(React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \" \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"5 Day Hourly Weather Report \"))); //keeps track when the day changes\n\n    var PrevDay; //stores data for the day\n\n    let row = []; //keeps count of number of rows\n\n    let RowCounter; //dictionary of months to convert from 01 to January. \n\n    var months = {\n      '01': 'Jan',\n      '02': 'Feb',\n      '03': 'Mar',\n      '04': 'Apr',\n      '05': 'May',\n      '06': 'Jun',\n      '07': 'Jul',\n      '08': 'Aug',\n      '09': 'Sep',\n      '10': 'Oct',\n      '11': 'Nov',\n      '12': 'Dec' //loops through the hourly data and formats it \n\n    };\n    {\n      props.WeatherFiveDay.map(function (day, index) {\n        //gets ICON based on the hour \n        var IconUrl = \"https://openweathermap.org/img/wn/\" + day.weather[0].icon + \"@2x.png\"; // breaks row if the day changes or first day of index\n\n        if (props.WeatherFiveDay[index].dt_txt.substring(8, 10) !== PrevDay || index === 39) {\n          //sets previous day\n          PrevDay = props.WeatherFiveDay[index].dt_txt.substring(8, 10); //counts the number of rows inserted       \n\n          RowCounter = RowCounter + 1; //adds row to table\n\n          table.push(React.createElement(\"div\", {\n            className: \"row\",\n            key: RowCounter,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, row)); //clears out row\n\n          row = []; //adds first hourly report with date to row                 \n\n          row.push(React.createElement(\"div\", {\n            key: index,\n            className: \"col\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"flex-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            id: \"WeathDateleft\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, months[day.dt_txt.substring(5, 7)], \" \", day.dt_txt.substring(8, 10)), React.createElement(\"div\", {\n            id: \"left\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }, \" \", Math.round(Number(((day.main.temp - 273.15) * 9 / 5 + 32).toFixed(2))), \" F \", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110\n            },\n            __self: this\n          }), day.dt_txt.substring(11, 16), \" \")), React.createElement(\"div\", {\n            id: \"right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: IconUrl,\n            alt: \"weather icon\",\n            title: day.weather[0].description,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          })))));\n        } else {\n          //adds just the time, temp, and weather icon to row\n          row.push(React.createElement(\"div\", {\n            key: index,\n            className: \"col\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"flex-container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            id: \"left\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }, \" \", Math.round(Number(((day.main.temp - 273.15) * 9 / 5 + 32).toFixed(2))), \" F \", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }), day.dt_txt.substring(11, 16), \" \")), React.createElement(\"div\", {\n            id: \"right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: IconUrl,\n            alt: \"weather icon\",\n            title: day.weather[0].description,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          })))));\n        }\n      });\n    }\n    return React.createElement(Fade, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"WeathStyle center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, props.WeatherCompCity && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, props.WeatherCompCity, \", \", props.WeatherCompCountry, \" Current Weather\"), React.createElement(\"div\", {\n      className: \"flex-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, props.WeatherCompTemp && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, props.WeatherCompTemp, \" F\"), props.WeatherCompDesc && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"   \", props.WeatherCompDesc)), React.createElement(\"div\", {\n      id: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, props.WeatherCompIcon && React.createElement(\"img\", {\n      src: props.WeatherCompIcon,\n      alt: \"weather icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"WeathStyle5Day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, table)));\n  } else {\n    return null;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\bob\\Documents\\Visual Studio 2015\\Projects\\my-app\\WeatherApp\\src\\components\\weather.js"],"names":["opps","Fade","React","Transition","phases","entered","opacity","entering","exited","exiting","Weather","props","WeatherCompError","in","status","marginTop","WeatherCompCity","table","push","PrevDay","row","RowCounter","months","WeatherFiveDay","map","day","index","IconUrl","weather","icon","dt_txt","substring","Math","round","Number","main","temp","toFixed","description","WeatherCompCountry","WeatherCompTemp","WeatherCompDesc","WeatherCompIcon"],"mappings":"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","sourcesContent":["//error pic\r\nimport opps from '../PICS/opps.gif';\r\n//fade effect for weather comp\r\nimport Fade from 'react-reveal/Zoom';\r\n\r\nimport React from \"react\";\r\n//another effect for the error comp.\r\nimport { Transition } from 'react-transition-group';\r\n\r\n\r\n//CSS styles for effect when the comp enters the various phases\r\nconst phases = {\r\n\tentered: {\r\n\t\topacity: 1\r\n\t},\r\n\tentering: {\r\n\t\topacity: 0\r\n\t},\r\n\texited: {\r\n\t\topacity: 0\r\n\t},\r\n\texiting: {\r\n\t\topacity: 1\r\n\t}\r\n};\r\n\r\n\r\nexport default function Weather(props)  {\r\n        //returns this div if API returns error          \r\n        if( props.WeatherCompError){\r\n\r\n        return ( \t<Transition in={props.in} appear timeout={500}  >\r\n                        {status => (\r\n                                <div className=\"animation\" style={phases[status]}>\r\n                                                                 <div className=\"WeathStyle\">  \r\n                                <div className=\"flex-container\">\r\n                                        <div id=\"left\" style={{marginTop: \"50px\"}}>\r\n                                                {props.WeatherCompError && <p>{props.WeatherCompError} </p> }\r\n                                        </div>\r\n                                        <div id=\"right\"> \r\n                                                <img src={opps} width=\"100%\" height=\"100%\" alt=\"opps img\"/>\r\n                                        </div>\r\n                                </div>\r\n                        </div>\r\n                                </div>\r\n                        )}\r\n                </Transition>)\r\n\r\n\r\n                                   \r\n        //else if it returns datas, it strctures it accordly\r\n        }  else if (props.WeatherCompCity) \r\n        {   \r\n            //declares table for 5 day weather\r\n            let table = []\r\n            //pushes out header\r\n            table.push(<div> <h3>5 Day Hourly Weather Report </h3></div>)\r\n            //keeps track when the day changes\r\n            var PrevDay \r\n            //stores data for the day\r\n            let row = []\r\n            //keeps count of number of rows\r\n            let RowCounter \r\n            //dictionary of months to convert from 01 to January. \r\n            var months = {\r\n                '01' : 'Jan',\r\n                '02' : 'Feb',\r\n                '03' : 'Mar',\r\n                '04' : 'Apr',\r\n                '05' : 'May',\r\n                '06' : 'Jun',\r\n                '07' : 'Jul',\r\n                '08' : 'Aug',\r\n                '09' : 'Sep',\r\n                '10' : 'Oct',\r\n                '11' : 'Nov',\r\n                '12' : 'Dec'\r\n                }\r\n                //loops through the hourly data and formats it \r\n                {props.WeatherFiveDay.map(function(day,index){\r\n                        //gets ICON based on the hour \r\n                        var IconUrl = \"https://openweathermap.org/img/wn/\" + day.weather[0].icon + \"@2x.png\" ;  \r\n\r\n                        // breaks row if the day changes or first day of index\r\n                        if((props.WeatherFiveDay[index].dt_txt.substring(8,10)) !== PrevDay || index === 39){\r\n                                //sets previous day\r\n                                PrevDay = props.WeatherFiveDay[index].dt_txt.substring(8,10)\r\n                                //counts the number of rows inserted       \r\n                                RowCounter = RowCounter + 1\r\n                                //adds row to table\r\n                                table.push(\r\n                                  <div className=\"row\" key={RowCounter}>       \r\n                                        {row}\r\n                                  </div>\r\n                                )\r\n                                //clears out row\r\n                                row = []\r\n\r\n\r\n\r\n                                //adds first hourly report with date to row                 \r\n                                row.push(<div key={index} className=\"col\"> \r\n                                      \r\n                                <div className=\"flex-container\">\r\n                        <div id=\"WeathDateleft\">\r\n                                {months[day.dt_txt.substring(5,7)]} {day.dt_txt.substring(8,10)}\r\n\r\n                        </div>\r\n                        <div id=\"left\">\r\n                        <p> {Math.round(Number(( (((day.main.temp - 273.15) * 9)/5) + 32).toFixed(2)))} F <br></br>\r\n                         {day.dt_txt.substring(11,16)} </p>\r\n                        </div>\r\n                        <div id=\"right\"> \r\n                        <img src={IconUrl} alt=\"weather icon\" title={day.weather[0].description}></img> \r\n                        </div>\r\n                </div>\r\n                                </div>)\r\n\r\n\r\n\r\n\r\n                              }else{ \r\n                                //adds just the time, temp, and weather icon to row\r\n                                row.push(\r\n                                \r\n                                <div key={index} className=\"col\"> \r\n                                                \r\n                                                \r\n                                <div className=\"flex-container\">\r\n                                <div id=\"left\">\r\n                                <p> {Math.round(Number(( (((day.main.temp - 273.15) * 9)/5) + 32).toFixed(2)))} F <br></br>\r\n                                  {day.dt_txt.substring(11,16)} </p>\r\n                                </div>\r\n                                <div id=\"right\"> \r\n                                <img src={IconUrl} alt=\"weather icon\" title={day.weather[0].description}></img> \r\n                                </div>\r\n                        </div>\r\n                        </div>)\r\n                        \r\n                                     \r\n                                  \r\n                              }\r\n                                                \r\n                  \r\n\r\n        })}\r\n\r\n\r\n                return ( \r\n        <Fade>\r\n                <div>\r\n                 <div className=\"WeathStyle center\">  \r\n                <div>\r\n                {props.WeatherCompCity && <p>{props.WeatherCompCity}, {props.WeatherCompCountry} Current Weather</p>}\r\n                <div className=\"flex-container\">\r\n                        <div id=\"left\">\r\n                        {props.WeatherCompTemp && <p>{props.WeatherCompTemp} F</p>}\r\n                        {props.WeatherCompDesc && <p>   {props.WeatherCompDesc}</p>}\r\n                        </div>\r\n                        <div id=\"right\"> \r\n                        {props.WeatherCompIcon && <img src={props.WeatherCompIcon} alt=\"weather icon\"></img> }\r\n                        </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n\r\n                <div className=\"WeathStyle5Day\">\r\n\r\n                     {table}         \r\n                </div>\r\n                  \r\n\r\n              \r\n         </div>\r\n\r\n         </Fade>\r\n         \r\n   \r\n\r\n                )\r\n\r\n        } else {\r\n                return ( null );\r\n        }\r\n\r\n        \r\n    \r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}