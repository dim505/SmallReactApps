{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\App.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport React from 'react';\nimport Titles from './components/title';\nimport Forms from './components/forms';\nimport Weather from './components/weather';\nimport MapContainer from './components/googlemap';\nimport ReactDOM from 'react-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getweather = async function fetchAsync(e) {\n      e.preventDefault();\n      const city = e.target.city.value;\n      const country = e.target.country.value;\n      const URL = 'https://api.openweathermap.org/data/2.5/weather?q=' + city + ',' + country + '&APPID=14b174dcab9bf47b49468e07daa1ff87'; // await response of fetch call\n\n      const response = await fetch(URL);\n      const results = await response.json(); //console.log(results.weather[0])\n\n      if (city && country && response.status !== 404) {\n        const temp = Number(((results.main.temp - 273.15) * 9 / 5 + 32).toFixed(2));\n        console.log(typeof temp);\n        var IconUrl = \"https://openweathermap.org/img/wn/\" + results.weather[0].icon + \"@2x.png\";\n        this.setState({\n          error: \"\",\n          temperature: temp,\n          city: results.name,\n          country: results.sys.country,\n          lat: results.coord.lat,\n          lon: results.coord.lon,\n          Desc: results.weather[0].description,\n          Icon: IconUrl\n        });\n      } else {\n        const ErrMsg = 'Opps!! Something went wrong. Please ensure both fields are filled out and are valid entities';\n        await this.setState({\n          error: ErrMsg,\n          temperature: \"\",\n          city: \"\",\n          country: \"\",\n          lat: \"\",\n          lon: \"\",\n          Desc: \"\",\n          Icon: \"\"\n        });\n      }\n    };\n\n    this.getweather = this.getweather.bind(this);\n    this.state = {\n      error: undefined,\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      lat: undefined,\n      lon: undefined,\n      Desc: undefined,\n      Icon: undefined\n    };\n  } // async function\n\n\n  componentDidMount() {\n    console.log(\"loaded\"); // Get the components DOM node\n\n    const elem = ReactDOM.findDOMNode(this); // Set the opacity of the element to 0\n\n    elem.style.opacity = 0; //alert(\"test\");\n\n    setTimeout(() => {\n      // Now set a transition on the opacity\n      elem.style.transition = \"opacity 2000ms\"; // and set the opacity to 1\n\n      elem.style.opacity = 1;\n    }, 500);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"background\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"alert alert-warning alert-dismissible fade show\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"close\",\n      \"data-dismiss\": \"alert\",\n      \"aria-label\": \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"\\xD7\")), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Warning!!\"), \" For the best user experience. Please use a modern browser like Mozilla Firefox, Chrome, Edge or Opera. Please refrain from using Internet Explorer or in private browsing.\"), React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Titles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Forms, {\n      loadWeather: this.getweather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      WeatherCompError: this.state.error,\n      WeatherCompCity: this.state.city,\n      WeatherCompCountry: this.state.country,\n      WeatherCompTemp: this.state.temperature,\n      WeatherCompDesc: this.state.Desc,\n      WeatherCompIcon: this.state.Icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"map\",\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(MapContainer, {\n      Weatherlat: this.state.lat,\n      Weatherlon: this.state.lon,\n      zoom: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\bob\\Documents\\Visual Studio 2015\\Projects\\my-app\\src\\App.js"],"names":["React","Titles","Forms","Weather","MapContainer","ReactDOM","App","Component","constructor","props","getweather","fetchAsync","e","preventDefault","city","target","value","country","URL","response","fetch","results","json","status","temp","Number","main","toFixed","console","log","IconUrl","weather","icon","setState","error","temperature","name","sys","lat","coord","lon","Desc","description","Icon","ErrMsg","bind","state","undefined","componentDidMount","elem","findDOMNode","style","opacity","setTimeout","transition","render"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './App.css'\r\nimport React from 'react';\r\nimport Titles from './components/title'\r\nimport Forms from './components/forms'\r\nimport Weather from './components/weather'\r\nimport MapContainer from './components/googlemap'\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.getweather = this.getweather.bind(this)\r\n        this.state = {\r\n                 error: undefined,\r\n                 temperature: undefined,\r\n                 city: undefined,\r\n                 country: undefined,\r\n                 lat : undefined,\r\n                 lon: undefined,\r\n                 Desc : undefined,\r\n                 Icon : undefined\r\n\r\n        } \r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n// async function\r\n    getweather = async function fetchAsync(e) {\r\n \r\n    \r\n\r\n        e.preventDefault();\r\n\r\n    const city = e.target.city.value\r\n    const country = e.target.country.value\r\n    const URL = 'https://api.openweathermap.org/data/2.5/weather?q=' + city + ',' + country + '&APPID=14b174dcab9bf47b49468e07daa1ff87'\r\n    // await response of fetch call\r\n    const response = await fetch(URL);\r\n    const results = await response.json(); \r\n    //console.log(results.weather[0])\r\n\r\n    \r\n    if(city && country && response.status !== 404){\r\n       \r\n    const temp = Number(( (((results.main.temp - 273.15) * 9)/5) + 32).toFixed(2))\r\n    console.log(typeof temp)\r\n\r\n    var IconUrl = \"https://openweathermap.org/img/wn/\" + results.weather[0].icon + \"@2x.png\"    \r\n\r\n\r\n    this.setState ({\r\n    error: \"\",\r\n    temperature: temp,\r\n    city: results.name,\r\n    country: results.sys.country,\r\n    lat: results.coord.lat,\r\n    lon: results.coord.lon,\r\n    Desc : results.weather[0].description,\r\n    Icon : IconUrl\r\n    })\r\n\r\n\r\n\r\n} else {     \r\n    \r\n    \r\n    const ErrMsg = 'Opps!! Something went wrong. Please ensure both fields are filled out and are valid entities'\r\n    await this.setState({\r\n    error: ErrMsg,\r\n    temperature: \"\",\r\n    city: \"\",\r\n    country: \"\",\r\n    lat: \"\",\r\n    lon: \"\",\r\n    Desc : \"\",\r\n    Icon : \"\"\r\n\r\n})} \r\n    \r\n   \r\n    \r\n \r\n}\r\n\r\n\r\ncomponentDidMount () {\r\n\r\n    console.log(\"loaded\")\r\n    // Get the components DOM node\r\n     const elem = ReactDOM.findDOMNode(this);\r\n    // Set the opacity of the element to 0\r\n    elem.style.opacity = 0;\r\n    //alert(\"test\");\r\n    setTimeout(() => {\r\n        // Now set a transition on the opacity\r\n        elem.style.transition = \"opacity 2000ms\";\r\n        // and set the opacity to 1\r\n    elem.style.opacity = 1;\r\n    }, 500);\r\n\r\n\r\n}\r\n    render() {\r\n        return (\r\n            <div className=\"background\">\r\n<           div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n                <strong>Warning!!</strong> For the best user experience. Please use a modern browser like Mozilla Firefox, Chrome, Edge or Opera. Please refrain from using Internet Explorer or in private browsing.\r\n            </div>\r\n            \r\n                <div className=\"center\">\r\n\r\n\r\n                    <Titles />\r\n                    <Forms loadWeather={this.getweather} />\r\n                    <Weather WeatherCompError = {this.state.error}\r\n                            WeatherCompCity = {this.state.city} \r\n                            WeatherCompCountry = {this.state.country}\r\n                            WeatherCompTemp = {this.state.temperature}\r\n                            WeatherCompDesc = {this.state.Desc}\r\n                            WeatherCompIcon = {this.state.Icon}\r\n                        />\r\n                </div>\r\n                <div id=\"map\" className=\"center\">\r\n                    <MapContainer \r\n\r\n                            Weatherlat = {this.state.lat}\r\n                            Weatherlon = {this.state.lon}\r\n                            zoom = {10}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}