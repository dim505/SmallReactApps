{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\components\\\\title.js\",\"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\components\\\\forms.js\",\"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\components\\\\weather.js\",\"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\components\\\\googlemap.js\",\"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\App.js\",\"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\index.js\"],\"names\":[\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"Titles\",\"react_default\",\"a\",\"createElement\",\"Forms\",\"props\",\"onSubmit\",\"loadWeather\",\"className\",\"type\",\"name\",\"placeholder\",\"value\",\"Weather\",\"WeatherCompError\",\"WeatherCompCity\",\"WeatherCompCountry\",\"WeatherCompTemp\",\"WeatherCompLat\",\"WeatherCompLon\",\"mapstyles\",\"width\",\"height\",\"MapContainer\",\"_Component\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"apply\",\"arguments\",\"inherits\",\"createClass\",\"key\",\"dist\",\"google\",\"zoom\",\"style\",\"initialCenter\",\"lat\",\"lng\",\"center\",\"Weatherlat\",\"Weatherlon\",\"position\",\"Component\",\"GoogleApiWrapper\",\"apiKey\",\"App\",\"_this\",\"call\",\"getweather\",\"_fetchAsync\",\"asyncToGenerator\",\"regenerator_default\",\"mark\",\"_callee\",\"e\",\"city\",\"country\",\"URL\",\"response\",\"results\",\"temp\",\"wrap\",\"_context\",\"prev\",\"next\",\"preventDefault\",\"target\",\"fetch\",\"sent\",\"json\",\"console\",\"log\",\"status\",\"Number\",\"main\",\"toFixed\",\"setState\",\"error\",\"temperature\",\"sys\",\"coord\",\"lon\",\"stop\",\"_x\",\"bind\",\"assertThisInitialized\",\"state\",\"undefined\",\"id\",\"googlemap\",\"React\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"\\r\\nimport React from 'react';\\r\\n\\r\\n\\r\\nexport default function Titles() {\\r\\n    return (\\r\\n        <div>\\r\\n            <h1>Welcome to My Weather App</h1>\\r\\n            <p> Please select the city and country to see the weather below </p>\\r\\n        </div>\\r\\n    )\\r\\n}\\r\\n\",\"import React from 'react';\\r\\n\\r\\n\\r\\nexport default function Forms (props)\\r\\n     {\\r\\n\\r\\n    \\r\\n    return (\\r\\n\\r\\n        <form onSubmit={props.loadWeather}>\\r\\n\\r\\n        <div className=\\\"form-group\\\">\\r\\n            <input type=\\\"text\\\" className=\\\"form-control\\\" name=\\\"city\\\" placeholder=\\\"Input City Here\\\"/>\\r\\n        </div>\\r\\n           \\r\\n        <div className=\\\"form-group\\\">\\r\\n            <input type=\\\"text\\\" className=\\\"form-control\\\" name=\\\"country\\\" placeholder=\\\"Input Country Here\\\"/>\\r\\n        </div>\\r\\n            \\r\\n            <input className=\\\"btn btn-outline-success btn-lg btn-block\\\" type=\\\"submit\\\" value=\\\"Submit\\\"/> \\r\\n\\r\\n         </form>      \\r\\n            \\r\\n                )\\r\\n\\r\\n\\r\\n    \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n}\\r\\n\\r\\n\",\"import React from 'react';\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nexport default function Weather(props)  {\\r\\n    \\r\\n\\r\\n        return ( <div>  \\r\\n                \\r\\n               \\r\\n                        {props.WeatherCompError && <p>{props.WeatherCompError} </p> }\\r\\n                        {props.WeatherCompCity && <p>City: {props.WeatherCompCity} {props.WeatherCompCountry} </p>}\\r\\n                        {props.WeatherCompTemp && <p>Current Temp: {props.WeatherCompTemp} F</p>}\\r\\n                        {props.WeatherCompLat && <p>Latitube: {props.WeatherCompLat}  </p> }\\r\\n                        {props.WeatherCompLon && <p>Longitude: {props.WeatherCompLon} </p>}\\r\\n\\r\\n                \\r\\n                 </div>\\r\\n            \\r\\n            \\r\\n            \\r\\n        )\\r\\n        \\r\\n    \\r\\n\\r\\n}\\r\\n\\r\\n\",\"import React, { Component } from 'react';\\r\\nimport {Marker, Map, GoogleApiWrapper } from 'google-maps-react';\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  const mapstyles = {\\r\\n    width: '50%',\\r\\n    height: '50%'\\r\\n};\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nexport class MapContainer  extends Component {\\r\\n\\r\\n\\r\\n    render() {\\r\\n    return (    \\r\\n      \\r\\n        <Map\\r\\n        google={this.props.google}\\r\\n        zoom={this.props.zoom}\\r\\n        style={mapstyles}\\r\\n        initialCenter={{\\r\\n          lat: 42.36,\\r\\n          lng: -71.06\\r\\n         }}\\r\\n        center={{\\r\\n          lat: this.props.Weatherlat,\\r\\n          lng: this.props.Weatherlon\\r\\n         }} >\\r\\n            <Marker position={{\\r\\n          lat: this.props.Weatherlat,\\r\\n          lng: this.props.Weatherlon\\r\\n         }} />\\r\\n        </Map>\\r\\n       \\r\\n\\r\\n       ) ;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nexport default GoogleApiWrapper({\\r\\n    apiKey: 'AIzaSyDMoFgWOjZKyH_mp_RduP8mJhTbb_j8tTw'\\r\\n  })(MapContainer);\\r\\n\\r\\n\\r\\n\",\"import 'bootstrap/dist/css/bootstrap.min.css'\\r\\nimport './App.css'\\r\\nimport React from 'react';\\r\\nimport Titles from './components/title'\\r\\nimport Forms from './components/forms'\\r\\nimport Weather from './components/weather'\\r\\nimport MapContainer from './components/googlemap'\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nclass App extends React.Component {\\r\\n\\r\\n\\r\\n    constructor(props) {\\r\\n        super(props)\\r\\n        this.getweather = this.getweather.bind(this)\\r\\n        this.state = {\\r\\n                 error: undefined,\\r\\n                 temperature: undefined,\\r\\n                 city: undefined,\\r\\n                 country: undefined,\\r\\n                 lat : undefined,\\r\\n                 lon: undefined\\r\\n\\r\\n        } \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n    \\r\\n// async function\\r\\n    getweather = async function fetchAsync(e) {\\r\\n \\r\\n    \\r\\n\\r\\n        e.preventDefault();\\r\\n\\r\\n    const city = e.target.city.value\\r\\n    const country = e.target.country.value\\r\\n    const URL = 'https://api.openweathermap.org/data/2.5/weather?q=' + city + ',' + country + '&APPID=14b174dcab9bf47b49468e07daa1ff87'\\r\\n    // await response of fetch call\\r\\n    const response = await fetch(URL);\\r\\n    const results = await response.json(); \\r\\n    //console.log(results)\\r\\n    console.log()\\r\\n    console.log()\\r\\n    \\r\\n    if(city && country && response.status !== 404){\\r\\n       \\r\\n    const temp = Number(( (((results.main.temp - 273.15) * 9)/5) + 32).toFixed(2))\\r\\n    console.log(typeof temp)\\r\\n\\r\\n    this.setState ({\\r\\n    error: \\\"\\\",\\r\\n    temperature: temp,\\r\\n    city: results.name,\\r\\n    country: results.sys.country,\\r\\n    lat: results.coord.lat,\\r\\n    lon: results.coord.lon\\r\\n\\r\\n    })\\r\\n\\r\\n\\r\\n\\r\\n} else {     \\r\\n    \\r\\n    \\r\\n    const ErrMsg = 'Opps!! Something went wrong. Please ensure both fields are filled out and are valid entities'\\r\\n    await this.setState({\\r\\n    error: ErrMsg,\\r\\n    temperature: \\\"\\\",\\r\\n    city: \\\"\\\",\\r\\n    country: \\\"\\\",\\r\\n    lat: \\\"\\\",\\r\\n    lon: \\\"\\\"\\r\\n\\r\\n})} \\r\\n    \\r\\n   \\r\\n    \\r\\n \\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n    render() {\\r\\n        return (\\r\\n            <div>\\r\\n                <div className=\\\"center\\\">\\r\\n\\r\\n\\r\\n                    <Titles />\\r\\n                    <Forms loadWeather={this.getweather} />\\r\\n                    <Weather WeatherCompError = {this.state.error}\\r\\n                            WeatherCompCity = {this.state.city} \\r\\n                            WeatherCompCountry = {this.state.country}\\r\\n                            WeatherCompTemp = {this.state.temperature}\\r\\n                        />\\r\\n                </div>\\r\\n                <div id=\\\"map\\\" className=\\\"center\\\">\\r\\n                    <MapContainer \\r\\n\\r\\n                            Weatherlat = {this.state.lat}\\r\\n                            Weatherlon = {this.state.lon}\\r\\n                            zoom = {10}\\r\\n                    />\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n        )\\r\\n    }\\r\\n}\\r\\nexport default App;\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport * as serviceWorker from './serviceWorker';\\nimport App from './App'\\n\\n\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\nserviceWorker.unregister();\\n\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{16:function(e,t,a){e.exports=a(38)},23:function(e,t,a){},38:function(e,t,a){\"use strict\";a.r(t);var r=a(0),n=a.n(r),o=a(3),l=a.n(o);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var i=a(12),c=a.n(i),s=a(15),u=a(4),p=a(5),m=a(8),h=a(7),d=a(6),y=a(9);a(22),a(23);function b(){return n.a.createElement(\"div\",null,n.a.createElement(\"h1\",null,\"Welcome to My Weather App\"),n.a.createElement(\"p\",null,\" Please select the city and country to see the weather below \"))}function f(e){return n.a.createElement(\"form\",{onSubmit:e.loadWeather},n.a.createElement(\"div\",{className:\"form-group\"},n.a.createElement(\"input\",{type:\"text\",className:\"form-control\",name:\"city\",placeholder:\"Input City Here\"})),n.a.createElement(\"div\",{className:\"form-group\"},n.a.createElement(\"input\",{type:\"text\",className:\"form-control\",name:\"country\",placeholder:\"Input Country Here\"})),n.a.createElement(\"input\",{className:\"btn btn-outline-success btn-lg btn-block\",type:\"submit\",value:\"Submit\"}))}function g(e){return n.a.createElement(\"div\",null,e.WeatherCompError&&n.a.createElement(\"p\",null,e.WeatherCompError,\" \"),e.WeatherCompCity&&n.a.createElement(\"p\",null,\"City: \",e.WeatherCompCity,\" \",e.WeatherCompCountry,\" \"),e.WeatherCompTemp&&n.a.createElement(\"p\",null,\"Current Temp: \",e.WeatherCompTemp,\" F\"),e.WeatherCompLat&&n.a.createElement(\"p\",null,\"Latitube: \",e.WeatherCompLat,\"  \"),e.WeatherCompLon&&n.a.createElement(\"p\",null,\"Longitude: \",e.WeatherCompLon,\" \"))}var v=a(10),E={width:\"50%\",height:\"50%\"},W=function(e){function t(){return Object(u.a)(this,t),Object(m.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(y.a)(t,e),Object(p.a)(t,[{key:\"render\",value:function(){return n.a.createElement(v.Map,{google:this.props.google,zoom:this.props.zoom,style:E,initialCenter:{lat:42.36,lng:-71.06},center:{lat:this.props.Weatherlat,lng:this.props.Weatherlon}},n.a.createElement(v.Marker,{position:{lat:this.props.Weatherlat,lng:this.props.Weatherlon}}))}}]),t}(r.Component),w=Object(v.GoogleApiWrapper)({apiKey:\"AIzaSyDMoFgWOjZKyH_mp_RduP8mJhTbb_j8tTw\"})(W),C=function(e){function t(e){var a;return Object(u.a)(this,t),(a=Object(m.a)(this,Object(h.a)(t).call(this,e))).getweather=function(){var e=Object(s.a)(c.a.mark(function e(t){var a,r,n,o,l,i;return c.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t.preventDefault(),a=t.target.city.value,r=t.target.country.value,n=\"https://api.openweathermap.org/data/2.5/weather?q=\"+a+\",\"+r+\"&APPID=14b174dcab9bf47b49468e07daa1ff87\",e.next=6,fetch(n);case 6:return o=e.sent,e.next=9,o.json();case 9:if(l=e.sent,console.log(),console.log(),!a||!r||404===o.status){e.next=18;break}i=Number((9*(l.main.temp-273.15)/5+32).toFixed(2)),console.log(typeof i),this.setState({error:\"\",temperature:i,city:l.name,country:l.sys.country,lat:l.coord.lat,lon:l.coord.lon}),e.next=21;break;case 18:return\"Opps!! Something went wrong. Please ensure both fields are filled out and are valid entities\",e.next=21,this.setState({error:\"Opps!! Something went wrong. Please ensure both fields are filled out and are valid entities\",temperature:\"\",city:\"\",country:\"\",lat:\"\",lon:\"\"});case 21:case\"end\":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),a.getweather=a.getweather.bind(Object(d.a)(a)),a.state={error:void 0,temperature:void 0,city:void 0,country:void 0,lat:void 0,lon:void 0},a}return Object(y.a)(t,e),Object(p.a)(t,[{key:\"render\",value:function(){return n.a.createElement(\"div\",null,n.a.createElement(\"div\",{className:\"center\"},n.a.createElement(b,null),n.a.createElement(f,{loadWeather:this.getweather}),n.a.createElement(g,{WeatherCompError:this.state.error,WeatherCompCity:this.state.city,WeatherCompCountry:this.state.country,WeatherCompTemp:this.state.temperature})),n.a.createElement(\"div\",{id:\"map\",className:\"center\"},n.a.createElement(w,{Weatherlat:this.state.lat,Weatherlon:this.state.lon,zoom:10})))}}]),t}(n.a.Component);l.a.render(n.a.createElement(C,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[16,1,2]]]);","extractedComments":[]}