{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\components\\\\title.js\",\"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\components\\\\forms.js\",\"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\components\\\\weather.js\",\"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\components\\\\googlemap.js\",\"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\App.js\",\"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\index.js\",\"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\node_modules\\\\url-loader\\\\dist\\\\cjs.js??ref--6-oneOf-0!C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\PICS\\\\opps.gif\"],\"names\":[\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"AlertDismissibleExample\",\"_useState\",\"useState\",\"_useState2\",\"Object\",\"slicedToArray\",\"show\",\"setShow\",\"react_default\",\"a\",\"createElement\",\"Alert_default\",\"variant\",\"onClose\",\"dismissible\",\"Heading\",\"Titles\",\"id\",\"Forms\",\"props\",\"onSubmit\",\"loadWeather\",\"className\",\"type\",\"name\",\"placeholder\",\"value\",\"Weather\",\"WeatherCompError\",\"style\",\"marginTop\",\"src\",\"opps\",\"width\",\"height\",\"WeatherCompCity\",\"WeatherCompCountry\",\"WeatherCompTemp\",\"WeatherCompDesc\",\"WeatherCompIcon\",\"alt\",\"mapstyles\",\"MapContainer\",\"_Component\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"apply\",\"arguments\",\"inherits\",\"createClass\",\"key\",\"dist\",\"google\",\"zoom\",\"initialCenter\",\"lat\",\"lng\",\"center\",\"Weatherlat\",\"Weatherlon\",\"position\",\"Component\",\"GoogleApiWrapper\",\"apiKey\",\"App\",\"_this\",\"call\",\"getweather\",\"_fetchAsync\",\"asyncToGenerator\",\"regenerator_default\",\"mark\",\"_callee\",\"e\",\"city\",\"country\",\"URL\",\"response\",\"results\",\"temp\",\"IconUrl\",\"wrap\",\"_context\",\"prev\",\"next\",\"preventDefault\",\"target\",\"fetch\",\"sent\",\"json\",\"status\",\"Number\",\"main\",\"toFixed\",\"weather\",\"icon\",\"setState\",\"error\",\"temperature\",\"sys\",\"coord\",\"lon\",\"Desc\",\"description\",\"Icon\",\"stop\",\"_x\",\"bind\",\"assertThisInitialized\",\"state\",\"undefined\",\"console\",\"log\",\"elem\",\"ReactDOM\",\"findDOMNode\",\"opacity\",\"setTimeout\",\"transition\",\"Fragment\",\"googlemap\",\"lib\",\"time\",\"color\",\"background\",\"React\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\",\"module\",\"exports\",\"__webpack_require__\",\"p\"],\"mappings\":\"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\",\"sourcesContent\":[\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import Alert from 'react-bootstrap/Alert'\\r\\n\\r\\nimport React, { useState } from 'react';\\r\\n\\r\\n\\r\\nfunction AlertDismissibleExample() {\\r\\n  const [show, setShow] = useState(true);\\r\\n\\r\\n  if (show) {\\r\\n    return (\\r\\n      <Alert variant=\\\"danger\\\" onClose={() => setShow(false)} dismissible>\\r\\n        <Alert.Heading>Attention!!</Alert.Heading>\\r\\n        <p>\\r\\n          Due to how the weather API operates, it only accepts city name and country code. It might return undesired results if there are multiple cities with the same name in the same country. \\r\\n        </p>\\r\\n      </Alert>\\r\\n    );\\r\\n  }\\r\\n  return <div></div>;\\r\\n}\\r\\n\\r\\n\\r\\nexport default function Titles() {\\r\\n    return (\\r\\n        <div>\\r\\n\\r\\n            <AlertDismissibleExample />\\r\\n            <h1 id=\\\"header\\\">Welcome to My Weather App</h1>\\r\\n            <h5 id=\\\"headerBody\\\"> Please input the city name and country code to see the weather below </h5>\\r\\n        </div>\\r\\n    )\\r\\n}\\r\\n\",\"import React from 'react';\\r\\n\\r\\n\\r\\nexport default function Forms (props)\\r\\n     {\\r\\n\\r\\n    \\r\\n    return (\\r\\n\\r\\n        <form onSubmit={props.loadWeather}>\\r\\n\\r\\n        <div className=\\\"form-group\\\">\\r\\n            <input type=\\\"text\\\" className=\\\"form-control\\\" name=\\\"city\\\" placeholder=\\\"City Name\\\"/>\\r\\n        </div>\\r\\n           \\r\\n        <div className=\\\"form-group\\\">\\r\\n            <input type=\\\"text\\\" className=\\\"form-control\\\" name=\\\"country\\\" placeholder=\\\"Country Code\\\"/>\\r\\n        </div>\\r\\n            \\r\\n            <input className=\\\"btn btn-outline-success btn-lg btn-block\\\" type=\\\"submit\\\" value=\\\"Submit\\\"/> \\r\\n\\r\\n         </form>      \\r\\n            \\r\\n                )\\r\\n\\r\\n\\r\\n    \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n}\\r\\n\\r\\n\",\"import React from 'react';\\r\\nimport opps from '../PICS/opps.gif';\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nexport default function Weather(props)  {\\r\\n\\r\\n        if( props.WeatherCompError){\\r\\n                return ( <div className=\\\"WeathStyle\\\">  \\r\\n                                <div className=\\\"flex-container\\\">\\r\\n                                        <div id=\\\"left\\\" style={{marginTop: \\\"50px\\\"}}>\\r\\n                                                {props.WeatherCompError && <p>{props.WeatherCompError} </p> }\\r\\n                                        </div>\\r\\n                                        <div id=\\\"right\\\"> \\r\\n                                                <img src={opps} width=\\\"200\\\" height=\\\"200\\\" />\\r\\n                                        </div>\\r\\n                                </div>\\r\\n                        </div>)\\r\\n                         \\r\\n                                   \\r\\n       \\r\\n        }  else if (props.WeatherCompCity) \\r\\n        {\\r\\n                return ( <div className=\\\"WeathStyle\\\">  \\r\\n                \\r\\n                <div>\\r\\n                \\r\\n                {props.WeatherCompCity && <p>{props.WeatherCompCity}, {props.WeatherCompCountry} </p>}\\r\\n                <div className=\\\"flex-container\\\">\\r\\n                        <div id=\\\"left\\\">\\r\\n                        {props.WeatherCompTemp && <p>{props.WeatherCompTemp} F</p>}\\r\\n                        {props.WeatherCompDesc && <p>   {props.WeatherCompDesc}</p>}\\r\\n                        </div>\\r\\n                        <div id=\\\"right\\\"> \\r\\n                        {props.WeatherCompIcon && <img src={props.WeatherCompIcon} alt=\\\"weather icon\\\"></img> }\\r\\n                        </div>\\r\\n                </div>\\r\\n                </div>\\r\\n         </div>\\r\\n\\r\\n\\r\\n\\r\\n                )\\r\\n\\r\\n        } else {\\r\\n                return ( null );\\r\\n\\r\\n\\r\\n        }\\r\\n\\r\\n        \\r\\n    \\r\\n\\r\\n}\\r\\n\\r\\n\",\"import React, { Component } from 'react';\\r\\nimport {Marker, Map, GoogleApiWrapper } from 'google-maps-react';\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  const mapstyles = {\\r\\n    width: '50%',\\r\\n    height: '50%',\\r\\n\\r\\n};\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nexport class MapContainer  extends Component {\\r\\n\\r\\n\\r\\n    render() {\\r\\n    return (    \\r\\n      \\r\\n        <Map\\r\\n        google={this.props.google}\\r\\n        zoom={this.props.zoom}\\r\\n        style={mapstyles}\\r\\n        initialCenter={{\\r\\n          lat: 42.36,\\r\\n          lng: -71.06\\r\\n         }}\\r\\n        center={{\\r\\n          lat: this.props.Weatherlat,\\r\\n          lng: this.props.Weatherlon\\r\\n         }} >\\r\\n            <Marker position={{\\r\\n          lat: this.props.Weatherlat,\\r\\n          lng: this.props.Weatherlon\\r\\n         }} />\\r\\n        </Map>\\r\\n       \\r\\n\\r\\n       ) ;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nexport default GoogleApiWrapper({\\r\\n    apiKey: 'AIzaSyDMoFgWOjZKyH_mp_RduP8mJhTbb_j8tTw'\\r\\n  })(MapContainer);\\r\\n\\r\\n\\r\\n\",\"import 'bootstrap/dist/css/bootstrap.min.css'\\r\\nimport './App.css'\\r\\nimport React from 'react';\\r\\nimport Titles from './components/title'\\r\\nimport Forms from './components/forms'\\r\\nimport Weather from './components/weather'\\r\\nimport MapContainer from './components/googlemap'\\r\\nimport ReactDOM from 'react-dom';\\r\\nimport {Circle} from 'react-preloaders';\\r\\n\\r\\n\\r\\n\\r\\nclass App extends React.Component {\\r\\n\\r\\n\\r\\n    constructor(props) {\\r\\n        super(props)\\r\\n        this.getweather = this.getweather.bind(this)\\r\\n        this.state = {\\r\\n                 error: undefined,\\r\\n                 temperature: undefined,\\r\\n                 city: undefined,\\r\\n                 country: undefined,\\r\\n                 lat : undefined,\\r\\n                 lon: undefined,\\r\\n                 Desc : undefined,\\r\\n                 Icon : undefined\\r\\n\\r\\n        } \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    }\\r\\n\\r\\n      \\r\\n\\r\\n\\r\\n// async function\\r\\n    getweather = async function fetchAsync(e) {\\r\\n \\r\\n    \\r\\n\\r\\n        e.preventDefault();\\r\\n\\r\\n    const city = e.target.city.value\\r\\n    const country = e.target.country.value\\r\\n    const URL = 'https://api.openweathermap.org/data/2.5/weather?q=' + city + ',' + country + '&APPID=14b174dcab9bf47b49468e07daa1ff87'\\r\\n    // await response of fetch call\\r\\n    const response = await fetch(URL);\\r\\n    const results = await response.json(); \\r\\n    \\r\\n\\r\\n    \\r\\n    if(city && country && response.status !== 404){\\r\\n       \\r\\n    const temp = Number(( (((results.main.temp - 273.15) * 9)/5) + 32).toFixed(2))\\r\\n    \\r\\n\\r\\n    var IconUrl = \\\"https://openweathermap.org/img/wn/\\\" + results.weather[0].icon + \\\"@2x.png\\\"    \\r\\n\\r\\n\\r\\n    this.setState ({\\r\\n    error: \\\"\\\",\\r\\n    temperature: temp,\\r\\n    city: results.name,\\r\\n    country: results.sys.country,\\r\\n    lat: results.coord.lat,\\r\\n    lon: results.coord.lon,\\r\\n    Desc : results.weather[0].description,\\r\\n    Icon : IconUrl\\r\\n    })\\r\\n\\r\\n\\r\\n\\r\\n} else {     \\r\\n    \\r\\n    \\r\\n    const ErrMsg = 'Opps!! Something went wrong. Please ensure both fields are filled out and are valid entities'\\r\\n    await this.setState({\\r\\n    error: ErrMsg,\\r\\n    temperature: \\\"\\\",\\r\\n    city: \\\"\\\",\\r\\n    country: \\\"\\\",\\r\\n    lat: \\\"\\\",\\r\\n    lon: \\\"\\\",\\r\\n    Desc : \\\"\\\",\\r\\n    Icon : \\\"\\\"\\r\\n\\r\\n})} \\r\\n    \\r\\n   \\r\\n    \\r\\n \\r\\n}\\r\\n\\r\\n\\r\\ncomponentDidMount () {\\r\\n\\r\\n    console.log(\\\"loaded\\\")\\r\\n    // Get the components DOM node\\r\\n     const elem = ReactDOM.findDOMNode(this);\\r\\n    // Set the opacity of the element to 0\\r\\n    elem.style.opacity = 0;\\r\\n    //alert(\\\"test\\\");\\r\\n    setTimeout(() => {\\r\\n        // Now set a transition on the opacity\\r\\n        elem.style.transition = \\\"opacity 2000ms\\\";\\r\\n        // and set the opacity to 1\\r\\n    elem.style.opacity = 1;\\r\\n    }, 6000);\\r\\n\\r\\n\\r\\n}\\r\\n    render() {\\r\\n        return (<React.Fragment>\\r\\n            <div className=\\\"background\\\">\\r\\n                    \\r\\n      \\r\\n      \\r\\n    \\r\\n            \\r\\n                <div className=\\\"center\\\">\\r\\n                    \\r\\n                    <Titles />\\r\\n                    <Forms loadWeather={this.getweather} />\\r\\n                    <Weather WeatherCompError = {this.state.error}\\r\\n                            WeatherCompCity = {this.state.city} \\r\\n                            WeatherCompCountry = {this.state.country}\\r\\n                            WeatherCompTemp = {this.state.temperature}\\r\\n                            WeatherCompDesc = {this.state.Desc}\\r\\n                            WeatherCompIcon = {this.state.Icon}\\r\\n                        />\\r\\n                </div>\\r\\n                <div id=\\\"map\\\" className=\\\"center\\\">\\r\\n                    <MapContainer \\r\\n\\r\\n                            Weatherlat = {this.state.lat}\\r\\n                            Weatherlon = {this.state.lon}\\r\\n                            zoom = {10}\\r\\n                    />\\r\\n                </div>\\r\\n                </div>\\r\\n                <Circle \\r\\n                       time={2500}\\r\\n                       color=\\\"#FFFAF0\\\"\\r\\n                       background= \\\"radial-gradient(circle, rgba(63,94,251,1) 0%, rgba(252,70,107,1) 100%)\\\"\\r\\n                />\\r\\n            </React.Fragment>\\r\\n\\r\\n        )\\r\\n    }\\r\\n}\\r\\nexport default App;\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport * as serviceWorker from './serviceWorker';\\nimport App from './App'\\n\\n\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\nserviceWorker.unregister();\\n\\n\",\"module.exports = __webpack_public_path__ + \\\"static/media/opps.5df01199.gif\\\";\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{109:function(e,t,a){\"use strict\";a.r(t);var r=a(0),n=a.n(r),o=a(5),i=a.n(o);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var c=a(19),l=a.n(c),s=a(31),m=a(10),u=a(11),h=a(14),p=a(13),d=a(12),y=a(15),g=(a(46),a(47),a(37)),v=a(20),f=a.n(v);function E(){var e=Object(r.useState)(!0),t=Object(g.a)(e,2),a=t[0],o=t[1];return a?n.a.createElement(f.a,{variant:\"danger\",onClose:function(){return o(!1)},dismissible:!0},n.a.createElement(f.a.Heading,null,\"Attention!!\"),n.a.createElement(\"p\",null,\"Due to how the weather API operates, it only accepts city name and country code. It might return undesired results if there are multiple cities with the same name in the same country.\")):n.a.createElement(\"div\",null)}function b(){return n.a.createElement(\"div\",null,n.a.createElement(E,null),n.a.createElement(\"h1\",{id:\"header\"},\"Welcome to My Weather App\"),n.a.createElement(\"h5\",{id:\"headerBody\"},\" Please input the city name and country code to see the weather below \"))}function w(e){return n.a.createElement(\"form\",{onSubmit:e.loadWeather},n.a.createElement(\"div\",{className:\"form-group\"},n.a.createElement(\"input\",{type:\"text\",className:\"form-control\",name:\"city\",placeholder:\"City Name\"})),n.a.createElement(\"div\",{className:\"form-group\"},n.a.createElement(\"input\",{type:\"text\",className:\"form-control\",name:\"country\",placeholder:\"Country Code\"})),n.a.createElement(\"input\",{className:\"btn btn-outline-success btn-lg btn-block\",type:\"submit\",value:\"Submit\"}))}var W=a(32),C=a.n(W);function O(e){return e.WeatherCompError?n.a.createElement(\"div\",{className:\"WeathStyle\"},n.a.createElement(\"div\",{className:\"flex-container\"},n.a.createElement(\"div\",{id:\"left\",style:{marginTop:\"50px\"}},e.WeatherCompError&&n.a.createElement(\"p\",null,e.WeatherCompError,\" \")),n.a.createElement(\"div\",{id:\"right\"},n.a.createElement(\"img\",{src:C.a,width:\"200\",height:\"200\"})))):e.WeatherCompCity?n.a.createElement(\"div\",{className:\"WeathStyle\"},n.a.createElement(\"div\",null,e.WeatherCompCity&&n.a.createElement(\"p\",null,e.WeatherCompCity,\", \",e.WeatherCompCountry,\" \"),n.a.createElement(\"div\",{className:\"flex-container\"},n.a.createElement(\"div\",{id:\"left\"},e.WeatherCompTemp&&n.a.createElement(\"p\",null,e.WeatherCompTemp,\" F\"),e.WeatherCompDesc&&n.a.createElement(\"p\",null,\"   \",e.WeatherCompDesc)),n.a.createElement(\"div\",{id:\"right\"},e.WeatherCompIcon&&n.a.createElement(\"img\",{src:e.WeatherCompIcon,alt:\"weather icon\"}))))):null}var j=a(16),x={width:\"50%\",height:\"50%\"},N=function(e){function t(){return Object(m.a)(this,t),Object(h.a)(this,Object(p.a)(t).apply(this,arguments))}return Object(y.a)(t,e),Object(u.a)(t,[{key:\"render\",value:function(){return n.a.createElement(j.Map,{google:this.props.google,zoom:this.props.zoom,style:x,initialCenter:{lat:42.36,lng:-71.06},center:{lat:this.props.Weatherlat,lng:this.props.Weatherlon}},n.a.createElement(j.Marker,{position:{lat:this.props.Weatherlat,lng:this.props.Weatherlon}}))}}]),t}(r.Component),k=Object(j.GoogleApiWrapper)({apiKey:\"AIzaSyDMoFgWOjZKyH_mp_RduP8mJhTbb_j8tTw\"})(N),D=a(33),I=function(e){function t(e){var a;return Object(m.a)(this,t),(a=Object(h.a)(this,Object(p.a)(t).call(this,e))).getweather=function(){var e=Object(s.a)(l.a.mark(function e(t){var a,r,n,o,i,c,s;return l.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t.preventDefault(),a=t.target.city.value,r=t.target.country.value,n=\"https://api.openweathermap.org/data/2.5/weather?q=\"+a+\",\"+r+\"&APPID=14b174dcab9bf47b49468e07daa1ff87\",e.next=6,fetch(n);case 6:return o=e.sent,e.next=9,o.json();case 9:if(i=e.sent,!a||!r||404===o.status){e.next=16;break}c=Number((9*(i.main.temp-273.15)/5+32).toFixed(2)),s=\"https://openweathermap.org/img/wn/\"+i.weather[0].icon+\"@2x.png\",this.setState({error:\"\",temperature:c,city:i.name,country:i.sys.country,lat:i.coord.lat,lon:i.coord.lon,Desc:i.weather[0].description,Icon:s}),e.next=19;break;case 16:return\"Opps!! Something went wrong. Please ensure both fields are filled out and are valid entities\",e.next=19,this.setState({error:\"Opps!! Something went wrong. Please ensure both fields are filled out and are valid entities\",temperature:\"\",city:\"\",country:\"\",lat:\"\",lon:\"\",Desc:\"\",Icon:\"\"});case 19:case\"end\":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),a.getweather=a.getweather.bind(Object(d.a)(a)),a.state={error:void 0,temperature:void 0,city:void 0,country:void 0,lat:void 0,lon:void 0,Desc:void 0,Icon:void 0},a}return Object(y.a)(t,e),Object(u.a)(t,[{key:\"componentDidMount\",value:function(){console.log(\"loaded\");var e=i.a.findDOMNode(this);e.style.opacity=0,setTimeout(function(){e.style.transition=\"opacity 2000ms\",e.style.opacity=1},6e3)}},{key:\"render\",value:function(){return n.a.createElement(n.a.Fragment,null,n.a.createElement(\"div\",{className:\"background\"},n.a.createElement(\"div\",{className:\"center\"},n.a.createElement(b,null),n.a.createElement(w,{loadWeather:this.getweather}),n.a.createElement(O,{WeatherCompError:this.state.error,WeatherCompCity:this.state.city,WeatherCompCountry:this.state.country,WeatherCompTemp:this.state.temperature,WeatherCompDesc:this.state.Desc,WeatherCompIcon:this.state.Icon})),n.a.createElement(\"div\",{id:\"map\",className:\"center\"},n.a.createElement(k,{Weatherlat:this.state.lat,Weatherlon:this.state.lon,zoom:10}))),n.a.createElement(D.Circle,{time:2500,color:\"#FFFAF0\",background:\"radial-gradient(circle, rgba(63,94,251,1) 0%, rgba(252,70,107,1) 100%)\"}))}}]),t}(n.a.Component);i.a.render(n.a.createElement(I,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},32:function(e,t,a){e.exports=a.p+\"static/media/opps.5df01199.gif\"},40:function(e,t,a){e.exports=a(109)},47:function(e,t,a){}},[[40,1,2]]]);","extractedComments":[]}