{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\components\\\\title.js\",\"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\components\\\\forms.js\",\"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\components\\\\weather.js\",\"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\App.js\",\"C:\\\\Users\\\\bob\\\\Documents\\\\Visual Studio 2015\\\\Projects\\\\my-app\\\\src\\\\index.js\"],\"names\":[\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"Titles\",\"react_default\",\"a\",\"createElement\",\"Forms\",\"props\",\"onSubmit\",\"loadWeather\",\"type\",\"name\",\"placeholder\",\"value\",\"Weather\",\"WeatherCompError\",\"WeatherCompCity\",\"WeatherCompCountry\",\"WeatherCompTemp\",\"WeatherCompLat\",\"WeatherCompLon\",\"App\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"getweather\",\"_fetchAsync\",\"asyncToGenerator\",\"regenerator_default\",\"mark\",\"_callee\",\"e\",\"city\",\"country\",\"URL\",\"response\",\"results\",\"temp\",\"wrap\",\"_context\",\"prev\",\"next\",\"preventDefault\",\"target\",\"fetch\",\"sent\",\"json\",\"console\",\"log\",\"status\",\"Number\",\"main\",\"toFixed\",\"setState\",\"error\",\"temperature\",\"sys\",\"lat\",\"coord\",\"lon\",\"state\",\"stop\",\"_x\",\"apply\",\"arguments\",\"bind\",\"assertThisInitialized\",\"undefined\",\"React\",\"Component\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"\\r\\nimport React from 'react';\\r\\n\\r\\n\\r\\nexport default function Titles() {\\r\\n    return (\\r\\n        <div>\\r\\n            <h1>Welcome to My Weather App</h1>\\r\\n            <p> Please select the city and country to see the weather below </p>\\r\\n        </div>\\r\\n    )\\r\\n}\\r\\n\",\"import React from 'react';\\r\\n\\r\\n\\r\\nexport default function Forms (props)\\r\\n     {\\r\\n\\r\\n    \\r\\n    return (\\r\\n\\r\\n        <form onSubmit={props.loadWeather}>\\r\\n\\r\\n            <input type=\\\"text\\\" name=\\\"city\\\" placeholder=\\\"Input City Here\\\"/>\\r\\n            <input type=\\\"text\\\" name=\\\"country\\\" placeholder=\\\"Input Country Here\\\"/>\\r\\n            <input type=\\\"submit\\\" value=\\\"Submit\\\"/> \\r\\n\\r\\n         </form>      \\r\\n            \\r\\n                )\\r\\n\\r\\n\\r\\n    \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n}\\r\\n\\r\\n\",\"import React from 'react';\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nexport default function Weather(props)  {\\r\\n    \\r\\n\\r\\n        return ( <div>  \\r\\n                \\r\\n               \\r\\n                        {props.WeatherCompError && <p>{props.WeatherCompError} </p> }\\r\\n                        {props.WeatherCompCity && <p>City: {props.WeatherCompCity} {props.WeatherCompCountry} </p>}\\r\\n                        {props.WeatherCompTemp && <p>Current Temp: {props.WeatherCompTemp} F</p>}\\r\\n                        {props.WeatherCompLat && <p>Latitube: {props.WeatherCompLat}  </p> }\\r\\n                        {props.WeatherCompLon && <p>Longitude: {props.WeatherCompLon} </p>}\\r\\n\\r\\n\\r\\n                \\r\\n\\r\\n             \\r\\n\\r\\n                \\r\\n\\r\\n                \\r\\n                 </div>\\r\\n            \\r\\n            \\r\\n            \\r\\n        )\\r\\n        \\r\\n    \\r\\n\\r\\n}\\r\\n\\r\\n\",\"\\r\\nimport React from 'react';\\r\\nimport Titles from './components/title'\\r\\nimport Forms from './components/forms'\\r\\nimport Weather from './components/weather'\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nclass App extends React.Component {\\r\\n\\r\\n\\r\\n    constructor(props) {\\r\\n        super(props)\\r\\n        this.getweather = this.getweather.bind(this)\\r\\n        this.state = {\\r\\n                 error: undefined,\\r\\n                 temperature: undefined,\\r\\n                 city: undefined,\\r\\n                 country: undefined,\\r\\n                 lat : undefined,\\r\\n                 lon: undefined\\r\\n\\r\\n        } \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n    \\r\\n// async function\\r\\n    getweather = async function fetchAsync(e) {\\r\\n \\r\\n    \\r\\n\\r\\n        e.preventDefault();\\r\\n\\r\\n    const city = e.target.city.value\\r\\n    const country = e.target.country.value\\r\\n    const URL = 'https://api.openweathermap.org/data/2.5/weather?q=' + city + ',' + country + '&APPID=14b174dcab9bf47b49468e07daa1ff87'\\r\\n    // await response of fetch call\\r\\n    const response = await fetch(URL);\\r\\n    const results = await response.json(); \\r\\n    //console.log(results)\\r\\n    console.log()\\r\\n    console.log()\\r\\n    \\r\\n    if(city && country && response.status !== 404){\\r\\n       \\r\\n    const temp = Number(( (((results.main.temp - 273.15) * 9)/5) + 32).toFixed(2))\\r\\n    console.log(typeof temp)\\r\\n\\r\\n    this.setState ({\\r\\n    error: \\\"\\\",\\r\\n    temperature: temp,\\r\\n    city: results.name,\\r\\n    country: results.sys.country,\\r\\n    lat: results.coord.lat,\\r\\n    lon: results.coord.lon\\r\\n\\r\\n    })\\r\\n\\r\\n\\r\\n\\r\\n} else {     \\r\\n    \\r\\n    \\r\\n    const ErrMsg = 'Opps!! Something went wrong. Please ensure both fields are filled out and are valid entities'\\r\\n    await this.setState({\\r\\n    error: ErrMsg,\\r\\n    temperature: \\\"\\\",\\r\\n    city: \\\"\\\",\\r\\n    country: \\\"\\\",\\r\\n    lat: \\\"\\\",\\r\\n    lon: \\\"\\\"\\r\\n\\r\\n})} \\r\\n    console.log(this.state.error)\\r\\n   \\r\\n    \\r\\n \\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n    render() {\\r\\n        return (\\r\\n            <div>\\r\\n                <Titles />\\r\\n                <Forms loadWeather={this.getweather} />\\r\\n                <Weather WeatherCompError = {this.state.error}\\r\\n                         WeatherCompCity = {this.state.city} \\r\\n                         WeatherCompCountry = {this.state.country}\\r\\n                         WeatherCompTemp = {this.state.temperature}\\r\\n                         WeatherCompLat = {this.state.lat}\\r\\n                         WeatherCompLon = {this.state.lon}\\r\\n                       />\\r\\n\\r\\n\\r\\n            </div>\\r\\n\\r\\n\\r\\n        )\\r\\n    }\\r\\n}\\r\\nexport default App;\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport * as serviceWorker from './serviceWorker';\\nimport App from './App'\\n\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\nserviceWorker.unregister();\\n\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{11:function(e,t,a){e.exports=a(18)},18:function(e,t,a){\"use strict\";a.r(t);var r=a(0),n=a.n(r),o=a(4),l=a.n(o);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var i=a(2),c=a.n(i),u=a(5),s=a(6),p=a(7),m=a(9),h=a(8),d=a(1),y=a(10);function v(){return n.a.createElement(\"div\",null,n.a.createElement(\"h1\",null,\"Welcome to My Weather App\"),n.a.createElement(\"p\",null,\" Please select the city and country to see the weather below \"))}function C(e){return n.a.createElement(\"form\",{onSubmit:e.loadWeather},n.a.createElement(\"input\",{type:\"text\",name:\"city\",placeholder:\"Input City Here\"}),n.a.createElement(\"input\",{type:\"text\",name:\"country\",placeholder:\"Input Country Here\"}),n.a.createElement(\"input\",{type:\"submit\",value:\"Submit\"}))}function f(e){return n.a.createElement(\"div\",null,e.WeatherCompError&&n.a.createElement(\"p\",null,e.WeatherCompError,\" \"),e.WeatherCompCity&&n.a.createElement(\"p\",null,\"City: \",e.WeatherCompCity,\" \",e.WeatherCompCountry,\" \"),e.WeatherCompTemp&&n.a.createElement(\"p\",null,\"Current Temp: \",e.WeatherCompTemp,\" F\"),e.WeatherCompLat&&n.a.createElement(\"p\",null,\"Latitube: \",e.WeatherCompLat,\"  \"),e.WeatherCompLon&&n.a.createElement(\"p\",null,\"Longitude: \",e.WeatherCompLon,\" \"))}var w=function(e){function t(e){var a;return Object(s.a)(this,t),(a=Object(m.a)(this,Object(h.a)(t).call(this,e))).getweather=function(){var e=Object(u.a)(c.a.mark(function e(t){var a,r,n,o,l,i;return c.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t.preventDefault(),a=t.target.city.value,r=t.target.country.value,n=\"https://api.openweathermap.org/data/2.5/weather?q=\"+a+\",\"+r+\"&APPID=14b174dcab9bf47b49468e07daa1ff87\",e.next=6,fetch(n);case 6:return o=e.sent,e.next=9,o.json();case 9:if(l=e.sent,console.log(),console.log(),!a||!r||404===o.status){e.next=18;break}i=Number((9*(l.main.temp-273.15)/5+32).toFixed(2)),console.log(typeof i),this.setState({error:\"\",temperature:i,city:l.name,country:l.sys.country,lat:l.coord.lat,lon:l.coord.lon}),e.next=21;break;case 18:return\"Opps!! Something went wrong. Please ensure both fields are filled out and are valid entities\",e.next=21,this.setState({error:\"Opps!! Something went wrong. Please ensure both fields are filled out and are valid entities\",temperature:\"\",city:\"\",country:\"\",lat:\"\",lon:\"\"});case 21:console.log(this.state.error);case 22:case\"end\":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),a.getweather=a.getweather.bind(Object(d.a)(a)),a.state={error:void 0,temperature:void 0,city:void 0,country:void 0,lat:void 0,lon:void 0},a}return Object(y.a)(t,e),Object(p.a)(t,[{key:\"render\",value:function(){return n.a.createElement(\"div\",null,n.a.createElement(v,null),n.a.createElement(C,{loadWeather:this.getweather}),n.a.createElement(f,{WeatherCompError:this.state.error,WeatherCompCity:this.state.city,WeatherCompCountry:this.state.country,WeatherCompTemp:this.state.temperature,WeatherCompLat:this.state.lat,WeatherCompLon:this.state.lon}))}}]),t}(n.a.Component);l.a.render(n.a.createElement(w,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[11,1,2]]]);","extractedComments":[]}