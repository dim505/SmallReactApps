[{"C:\\scratch\\Code\\Tweeder\\src\\Shared\\appState.js":"1","C:\\scratch\\Code\\Tweeder\\src\\Shared\\ApiCall.js":"2","C:\\scratch\\Code\\Tweeder\\src\\Bookmarks.js":"3","C:\\scratch\\Code\\Tweeder\\src\\index.tsx":"4","C:\\scratch\\Code\\Tweeder\\src\\Home.tsx":"5","C:\\scratch\\Code\\Tweeder\\src\\App.tsx":"6","C:\\scratch\\Code\\Tweeder\\src\\FrontPage.tsx":"7","C:\\scratch\\Code\\Tweeder\\src\\NarBar.tsx":"8","C:\\scratch\\Code\\Tweeder\\src\\Explore.tsx":"9","C:\\scratch\\Code\\Tweeder\\src\\FooterNavBar.tsx":"10","C:\\scratch\\Code\\Tweeder\\src\\Post.tsx":"11","C:\\scratch\\Code\\Tweeder\\src\\footer.tsx":"12","C:\\scratch\\Code\\Tweeder\\src\\Profile.tsx":"13","C:\\scratch\\Code\\Tweeder\\src\\PostImage.tsx":"14","C:\\scratch\\Code\\projects\\SmallReactApps\\YoutubeClone\\src\\index.tsx":"15","C:\\scratch\\Code\\projects\\SmallReactApps\\YoutubeClone\\src\\App.tsx":"16","C:\\scratch\\Code\\projects\\SmallReactApps\\YoutubeClone\\src\\Shared\\appState.js":"17","C:\\scratch\\Code\\projects\\SmallReactApps\\YoutubeClone\\src\\Shared\\ApiCall.js":"18","C:\\scratch\\Code\\projects\\SmallReactApps\\YoutubeClone\\src\\Components\\Header\\Header.tsx":"19","C:\\scratch\\Code\\projects\\SmallReactApps\\YoutubeClone\\src\\Components\\RecommendedVideo\\RecommendedVideos.tsx":"20","C:\\scratch\\Code\\projects\\SmallReactApps\\YoutubeClone\\src\\Components\\SearchPageResults\\SearchPageResults.tsx":"21","C:\\scratch\\Code\\projects\\SmallReactApps\\YoutubeClone\\src\\Components\\VideoPlayer\\VideoPlayer.tsx":"22","C:\\scratch\\Code\\projects\\SmallReactApps\\YoutubeClone\\src\\Components\\RecommendedVideo\\VideoCard.tsx":"23"},{"size":720,"mtime":1618067056000,"results":"24","hashOfConfig":"25"},{"size":963,"mtime":1618067056000,"results":"26","hashOfConfig":"25"},{"size":1505,"mtime":1618067056000,"results":"27","hashOfConfig":"25"},{"size":179,"mtime":1618067056000,"results":"28","hashOfConfig":"25"},{"size":9807,"mtime":1631905424229,"results":"29","hashOfConfig":"25"},{"size":2725,"mtime":1618067056000,"results":"30","hashOfConfig":"25"},{"size":1549,"mtime":1618067056000,"results":"31","hashOfConfig":"25"},{"size":4828,"mtime":1618067056000,"results":"32","hashOfConfig":"25"},{"size":2034,"mtime":1631905403672,"results":"33","hashOfConfig":"25"},{"size":1103,"mtime":1618067056000,"results":"34","hashOfConfig":"25"},{"size":8365,"mtime":1618067056000,"results":"35","hashOfConfig":"25"},{"size":392,"mtime":1618067056000,"results":"36","hashOfConfig":"25"},{"size":3972,"mtime":1618067056000,"results":"37","hashOfConfig":"25"},{"size":579,"mtime":1618067056000,"results":"38","hashOfConfig":"25"},{"size":179,"mtime":1618067056000,"results":"39","hashOfConfig":"40"},{"size":1103,"mtime":1633452859351,"results":"41","hashOfConfig":"40"},{"size":342,"mtime":1632326875370,"results":"42","hashOfConfig":"40"},{"size":963,"mtime":1618067056000,"results":"43","hashOfConfig":"40"},{"size":2365,"mtime":1633450088690,"results":"44","hashOfConfig":"40"},{"size":4107,"mtime":1633452121051,"results":"45","hashOfConfig":"40"},{"size":4443,"mtime":1633454417474,"results":"46","hashOfConfig":"40"},{"size":4996,"mtime":1633454331300,"results":"47","hashOfConfig":"40"},{"size":1284,"mtime":1633451475075,"results":"48","hashOfConfig":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},"1h9f7vx",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"9dzdkb",{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"90"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"90"},"C:\\scratch\\Code\\Tweeder\\src\\Shared\\appState.js",["116","117"],"import { observable, action, computed } from \"mobx\";\nimport { ApiCall } from \"./ApiCall\";\nimport { createContext } from \"react\";\n\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\nclass AppState {\n  @observable Auth0Client = \"\";\n\n  @action GetAuth0Client = async () => {\n   await  createAuth0Client({\n      domain: \"dev-5wttvoce.auth0.com\",\n      client_id: \"a47WBv2GDMgTgLLpbRkDQK31mkPVcnGh\",\n      //Redirect URL when authenication suceeds\n      redirect_uri: `${process.env.REACT_APP_FrontEndSiteURL}`\n      /*, audience: \"https://TweederClone.com\" */\n    }).then((auth0) => {\n      this.Auth0Client = auth0;\n    });\n  };\n}\n \nconst appStateContext = createContext(new AppState());\nexport default appStateContext;\n",["118","119"],"C:\\scratch\\Code\\Tweeder\\src\\Shared\\ApiCall.js",[],"C:\\scratch\\Code\\Tweeder\\src\\Bookmarks.js",["120","121"],"import React, { useEffect, useState, useContext } from \"react\";\nimport Post from \"./Post\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Shared from \"./Shared.module.scss\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nconst Bookmarks = () => {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item xs={12} sm={3}>\n        <div className={Shared.TabContainer}>\n          <Paper>\n            <Tabs\n              classes={{ indicator: Shared.TabUnderline }}\n              orientation=\"vertical\"\n              variant=\"scrollable\"\n              value={value}\n              onChange={handleChange}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              centered\n            >\n              <Tab label=\"Tweets\" />\n              <Tab label=\"Tweets & replies\" />\n              <Tab label=\"Media\" />\n              <Tab label=\"Likes\" />\n            </Tabs>\n          </Paper>\n        </div>\n      </Grid>\n\n      <Grid item xs={12} sm={9}>\n        <Grid container>\n          <Grid item xs={12} md={6}>\n            <Post />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Post />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Post />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Bookmarks;\n","C:\\scratch\\Code\\Tweeder\\src\\index.tsx",[],["122","123"],"C:\\scratch\\Code\\Tweeder\\src\\Home.tsx",["124","125","126","127","128","129","130","131","132","133","134","135","136"],"import React, { useEffect, useState, useContext } from \"react\";\nimport HomePage from \"./HomePage.module.scss\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport PublicIcon from \"@material-ui/icons/Public\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Popover from \"@material-ui/core/Popover\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Footer from \"./footer\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport Post from \"./Post\";\n\nconst Home = () => {\n  const TrendingTweets = [\n    { TweetName: \"programming\", NumberOfTweets: \"200k\" },\n    { TweetName: \"devchallenges\", NumberOfTweets: \"123k\" },\n    { TweetName: \"frontend\", NumberOfTweets: \"34k\" },\n    { TweetName: \"helsinki\", NumberOfTweets: \"11k\" },\n    { TweetName: \"100DaysOfCode\", NumberOfTweets: \"5k\" },\n    { TweetName: \"learntoCode\", NumberOfTweets: \"1k\" }\n  ];\n\n  const [OpenPopover, SetOpenPopover] = React.useState(false);\n  const [OpenAddImage, SetOpenAddImage] = React.useState(false);\n  const ClosePopOver = () => SetOpenPopover(false);\n  const OpenPopoverFunc = (event) => SetOpenPopover(event.currentTarget);\n\n  const AddImage = () => {\n    SetOpenAddImage(false);\n  };\n\n  return (\n    <div className={HomePage.background}>\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={8}>\n          <div className={HomePage.AddTweetContainer}>\n            <Typography variant=\"button\" gutterBottom>\n              Tweet Something\n            </Typography>\n            <Divider />\n            <div className={HomePage.AddTweetContent}>\n              <div className={HomePage.AddTweetTextboxContainer}>\n                <Avatar variant=\"rounded\">s</Avatar>\n\n                <TextField\n                  classes={{ root: HomePage.AddTweetTextbox }}\n                  fullWidth={true}\n                  label=\"Whats Happening?\"\n                />\n              </div>\n            </div>\n\n            <div className={HomePage.AddTweetBottom}>\n              <div>\n                <IconButton\n                  onClick={() => {\n                    SetOpenAddImage(true);\n                  }}\n                >\n                  <ImageIcon />\n                </IconButton>\n\n                <Dialog open={OpenAddImage} onClose={() => AddImage()}>\n                  <DialogTitle id=\"alert-dialog-title\">\n                    {\"Use Google's location service?\"}\n                  </DialogTitle>\n                  <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                      Let Google help apps determine location. This means\n                      sending anonymous location data to Google, even when no\n                      apps are running.\n                    </DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                    <Button onClick={() => AddImage()} color=\"primary\">\n                      Disagree\n                    </Button>\n                    <Button\n                      onClick={() => AddImage()}\n                      color=\"primary\"\n                      autoFocus\n                    >\n                      Agree\n                    </Button>\n                  </DialogActions>\n                </Dialog>\n\n                <Button onClick={OpenPopoverFunc} color=\"primary\">\n                  {\" \"}\n                  <PublicIcon /> <p> Everyone can reply </p>\n                </Button>\n              </div>\n\n              <div>\n                <Button variant=\"contained\" color=\"primary\">\n                  Tweet\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          <Post />\n\n          <Post />\n          <Post />\n\n          <Popover\n            classes={{ paper: HomePage.AddTweetPopover }}\n            open={Boolean(OpenPopover)}\n            anchorEl={OpenPopover}\n            onClose={ClosePopOver}\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\"\n            }}\n            transformOrigin={{\n              vertical: \"top\",\n              horizontal: \"center\"\n            }}\n          >\n            <Typography variant=\"h6\" gutterBottom>\n              Who can reply?\n            </Typography>\n\n            <Typography variant=\"body2\" gutterBottom>\n              Choose who can reply to this Tweet\n            </Typography>\n            <Button\n              classes={{ root: HomePage.PopoverButtons }}\n              fullWidth={true}\n            >\n              {\" \"}\n              <PublicIcon /> <p> Everyone </p>\n            </Button>\n\n            <Button\n              classes={{ root: HomePage.PopoverButtons }}\n              fullWidth={true}\n            >\n              {\" \"}\n              <PeopleIcon /> <p> People you follow </p>\n            </Button>\n          </Popover>\n        </Grid>\n        <Hidden smDown={true}>\n          <Grid item md={4}>\n            <Paper\n              classes={{ root: HomePage.TrendingTweetsContainer }}\n              elevation={0}\n            >\n              {\" \"}\n              <Typography variant=\"button\" display=\"block\" gutterBottom>\n                Trends for you\n              </Typography>{\" \"}\n              <Divider />\n              {TrendingTweets.map((tweet) => {\n                return (\n                  <div>\n                    <Typography variant=\"h6\" gutterBottom>\n                      #{tweet.TweetName}\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                      {tweet.NumberOfTweets} Tweets\n                    </Typography>\n                  </div>\n                );\n              })}\n            </Paper>\n\n            <Paper\n              classes={{ root: HomePage.TrendingTweetsContainer }}\n              elevation={0}\n            >\n              {\" \"}\n              <Typography variant=\"button\" display=\"block\" gutterBottom>\n                Who to Follow\n              </Typography>{\" \"}\n              <Divider />\n              <CardHeader\n                avatar={\n                  <Avatar\n                    variant=\"rounded\"\n                    src=\"https://i.pinimg.com/originals/d8/ab/6a/d8ab6a527914cba58261361792653287.jpg\"\n                    alt=\"derp\"\n                  />\n                }\n                classes={{\n                  root: \"TextAllignLeft\"\n                }}\n                title={\n                  <Typography variant=\"h5\" gutterBottom>\n                    Derp\n                  </Typography>\n                }\n                subheader={\n                  <Typography variant=\"body2\" gutterBottom>\n                    230k Followers\n                  </Typography>\n                }\n                action={\n                  <Button variant=\"contained\" color=\"primary\">\n                    Tweet\n                  </Button>\n                }\n              />\n              <Typography variant=\"body1\" gutterBottom>\n                MUNCH MUNCHMUNCHMUNCHMUNCHMUNCH MUNCH MUNCH MUNCH MUNCH MUNCH\n              </Typography>\n              <img\n                style={{ height: \"100%\", width: \"100%\" }}\n                src=\"https://lh3.googleusercontent.com/proxy/tmZo_sc4Pczuo9Xy6wTC8Z3Iv6rtVKJNwoOmpjH8F5Un3lVOGLo54-EgEbdpZbFWQzpItkjERjP4mbtTRVvKC2zJt_fScfp1OrB-_q0N0Ds\"\n              />\n              <Divider />\n              <CardHeader\n                avatar={\n                  <Avatar\n                    variant=\"rounded\"\n                    src=\"https://pm1.narvii.com/6170/6b10b3eafebf6f89c28da751e9748976732f5d24_hq.jpg\"\n                    alt=\"derp\"\n                  />\n                }\n                classes={{\n                  root: \"TextAllignLeft\"\n                }}\n                title={\n                  <Typography variant=\"h5\" gutterBottom>\n                    Derp\n                  </Typography>\n                }\n                subheader={\n                  <Typography variant=\"body2\" gutterBottom>\n                    230k Followers\n                  </Typography>\n                }\n                action={\n                  <Button variant=\"contained\" color=\"primary\">\n                    Tweet\n                  </Button>\n                }\n              />\n              <Typography variant=\"body1\" gutterBottom>\n                MUNCH MUNCHMUNCHMUNCHMUNCHMUNCH MUNCH MUNCH MUNCH MUNCH MUNCH\n              </Typography>\n              <img\n                style={{ height: \"100%\", width: \"100%\" }}\n                src=\"https://pm1.narvii.com/6170/6b10b3eafebf6f89c28da751e9748976732f5d24_hq.jpg\"\n              />\n            </Paper>\n          </Grid>\n        </Hidden>\n        <Footer />\n      </Grid>\n    </div>\n  );\n};\n\nexport default Home;\n","C:\\scratch\\Code\\Tweeder\\src\\App.tsx",["137","138","139","140","141"],"import FrontPage from \"./FrontPage\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport appStateContext from \"./Shared/appState\";\nimport \"./Global.scss\";\nimport Home from \"./Home\";\nimport NavBar from \"./NarBar\";\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\nimport Fade from \"react-reveal/Fade\";\nimport Profile from \"./Profile\";\nimport Explore from \"./Explore\";\nimport Bookmarks from \"./Bookmarks\";\nimport FooterNavBar from \"./FooterNavBar\";\n//https://www.ronaldjamesgroup.com/blog/reason-behind-using-refs-instead-of-id-in-react-js\n//https://www.javascriptstuff.com/use-refs-not-ids/\n//https://underbelly.is/writing-about/using-react-refs-to-manipulate-the-dom\nconst App = () => {\n  const appState = useContext(appStateContext);\n  const [TabValue, SetTabValue] = useState(0);\n  const [Authenicated, SetAuthenication] = useState(false);\n  const [value, setValue] = React.useState(0);\n\n  const UpdateTab = (newValue) => {\n    SetTabValue(newValue);\n  };\n  useEffect(async () => {\n    await appState.GetAuth0Client();\n\n    setTimeout(async () => {\n      if (window.location.search.includes(\"code=\")) {\n        SetAuthenication(true);\n      } else {\n        const isAuthenticated = await appState.Auth0Client.isAuthenticated();\n        SetAuthenication(isAuthenticated);\n      }\n    }, 1000);\n\n    try {\n      await appState.Auth0Client.getTokenSilently();\n    } catch (error) {\n      console.log(error);\n      /* if (error.error !== 'login_required') {\n                throw error\n          } */\n    }\n  }, []);\n  {\n    /*  */\n  }\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const isAuthenticated = () => {\n    if (Authenicated) {\n      return (\n        <>\n          <NavBar TabValue={TabValue} UpdateTab={UpdateTab} />\n          <div className=\"PostBody\">\n            {TabValue === 0 ? (\n              <Fade>\n                <Home />\n              </Fade>\n            ) : (\n              <div />\n            )}\n\n            {TabValue === 1 ? (\n              <Fade>\n                <Explore />\n              </Fade>\n            ) : (\n              <div />\n            )}\n\n            {TabValue === 2 ? (\n              <Fade>\n                <Bookmarks />\n              </Fade>\n            ) : (\n              <div />\n            )}\n\n            {TabValue === 3 ? (\n              <Fade>\n                <Profile />\n              </Fade>\n            ) : (\n              <div />\n            )}\n\n            <FooterNavBar TabValue={TabValue} UpdateTab={UpdateTab} />\n          </div>\n        </>\n      );\n    } else {\n      return (\n        <Fade>\n          <FrontPage />\n        </Fade>\n      );\n    }\n  };\n\n  return <>{isAuthenticated()}</>;\n};\n\nexport default App;\n","C:\\scratch\\Code\\Tweeder\\src\\FrontPage.tsx",["142","143"],"import React, { useEffect, useState, useContext } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Style from \"./FrontPage.module.scss\";\nimport appStateContext from \"./Shared/appState\";\n\nconst FrontPage = () => {\n  const appState = useContext(appStateContext);\n\n  const Login = () => {\n    appState.Auth0Client.loginWithRedirect();\n  };\n  return (\n    <Grid container>\n      <Grid item xs={6}>\n        <div className={Style.FrontPageImg}>\n          <TwitterIcon />\n        </div>\n      </Grid>\n      <Grid item xs={6}>\n        <div className={Style.FrontPageText}>\n          <TwitterIcon />\n          <Typography variant=\"h3\" gutterBottom>\n            Happening Now\n          </Typography>\n          <Typography variant=\"h4\" gutterBottom>\n            Join Tweeder today\n          </Typography>\n\n          <div>\n            <Button\n              classes={{ root: Style.BtnSignUp }}\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={Login}\n            >\n              Sign Up\n            </Button>\n          </div>\n          <div>\n            <Button\n              classes={{ root: Style.BtnLogIn }}\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={Login}\n            >\n              Log In\n            </Button>\n          </div>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default FrontPage;\n","C:\\scratch\\Code\\Tweeder\\src\\NarBar.tsx",["144","145","146"],"import React, { useEffect, useState, useContext } from \"react\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport NavBarStyle from \"./NavBar.module.scss\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Button from \"@material-ui/core/Button\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport Divider from \"@material-ui/core/Divider\";\nimport appStateContext from \"./Shared/appState\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\nconst NavBar = (props) => {\n  const appState = useContext(appStateContext);\n  const [OpenPopover, SetOpenPopover] = React.useState(false);\n  const ClosePopOver = () => SetOpenPopover(false);\n  const OpenPopoverFunc = (event) => SetOpenPopover(event.currentTarget);\n\n  const handleChange = (event, newValue) => {\n    props.UpdateTab(newValue);\n  };\n\n  return (\n    <>\n      <div className={NavBarStyle.NavBar}>\n        <Grid container alignItems=\"center\">\n          <Grid item xs={3}>\n            <IconButton\n              onClick={() => {\n                props.UpdateTab(0);\n              }}\n            >\n              <TwitterIcon />\n            </IconButton>\n            <Hidden smDown={true}>\n              <Typography display=\"inline\" variant=\"h6\">\n                Tweeder\n              </Typography>\n            </Hidden>\n          </Grid>\n          <Grid item xs={6}>\n            <Grid container justify=\"center\">\n              <Hidden smDown={true}>\n                <Tabs\n                  value={props.TabValue}\n                  onChange={handleChange}\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  centered\n                >\n                  <Tab label=\"Home\" />\n                  <Tab label=\"Explore\" />\n                  <Tab label=\"Bookmarks \" />\n                </Tabs>\n              </Hidden>\n            </Grid>\n          </Grid>\n\n          <Grid item xs={3}>\n            <Grid container spacing={5} justify=\"flex-end\" alignItems=\"center\">\n              <Grid item>\n                <IconButton onClick={OpenPopoverFunc}>\n                  <Avatar\n                    variant=\"rounded\"\n                    alt=\"Remy Sharp\"\n                    src=\"/broken-image.jpg\"\n                  />\n                </IconButton>\n\n                <Hidden smDown={true}>\n                  <Typography\n                    classes={{ root: NavBarStyle.ProfileNameDiv }}\n                    display=\"inline\"\n                    variant=\"subtitle2\"\n                  >\n                    Bob Smith{\" \"}\n                  </Typography>\n                </Hidden>\n\n                <Popover\n                  open={Boolean(OpenPopover)}\n                  anchorEl={OpenPopover}\n                  onClose={ClosePopOver}\n                  anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"center\"\n                  }}\n                  transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"center\"\n                  }}\n                >\n                  <ButtonGroup\n                    classes={{ grouped: NavBarStyle.ProfileMenu }}\n                    orientation=\"vertical\"\n                  >\n                    <Button\n                      onClick={() => props.UpdateTab(3)}\n                      startIcon={<AccountCircleIcon />}\n                    >\n                      My Profile\n                    </Button>\n                    <Button disabled startIcon={<GroupIcon />}>\n                      Group Chat\n                    </Button>\n                    <Button disabled startIcon={<SettingsIcon />}>\n                      Settings\n                    </Button>\n                    <Divider variant=\"middle\" />\n                    <Button\n                      onClick={() => {\n                        appState.Auth0Client.logout();\n                      }}\n                      classes={{ grouped: NavBarStyle.Logout }}\n                      startIcon={<ExitToAppIcon />}\n                    >\n                      Logout\n                    </Button>\n                  </ButtonGroup>\n                </Popover>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  );\n};\n\nexport default NavBar;\n","C:\\scratch\\Code\\Tweeder\\src\\Explore.tsx",["147","148"],"import Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Button from \"@material-ui/core/Button\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Shared from \"./Shared.module.scss\";\nimport Post from \"./Post\";\nconst Explore = () => {\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Grid spacing={2} container>\n      <Grid item xs={3}>\n        <div className={Shared.TabContainer}>\n          <Paper>\n            <Tabs\n              classes={{ indicator: Shared.TabUnderline }}\n              orientation=\"vertical\"\n              variant=\"scrollable\"\n              value={value}\n              onChange={handleChange}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              centered\n            >\n              <Tab label=\"Top\" />\n              <Tab label=\"Lastest\" />\n              <Tab label=\"People\" />\n              <Tab label=\"Media\" />\n            </Tabs>\n          </Paper>\n        </div>\n      </Grid>\n\n      <Grid item xs={9}>\n        <Paper>\n          <InputBase\n            fullWidth={true}\n            multiline={true}\n            value=\"\"\n            placeholder=\"Tweet Your Reply\"\n            startAdornment={<SearchIcon />}\n            endAdornment={\n              <Button variant=\"contained\" color=\"primary\">\n                Search\n              </Button>\n            }\n          />\n        </Paper>\n        <Grid spacing={2} container>\n          <Grid item xs={12} md={6}>\n            <Post PostType=\"Image\" />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Post />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Post />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Explore;\n","C:\\scratch\\Code\\Tweeder\\src\\FooterNavBar.tsx",["149"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport ExploreIcon from \"@material-ui/icons/Explore\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport NavBarStyle from \"./NavBar.module.scss\";\nconst FooterNavBar = (props) => {\n  return (\n    <Hidden mdUp={true}>\n      <div className={NavBarStyle.BottomNavBar}>\n        <BottomNavigation\n          value={props.TabValue}\n          onChange={(event, newValue) => {\n            props.UpdateTab(newValue);\n          }}\n          showLabels\n        >\n          <BottomNavigationAction label=\"Home\" icon={<HomeIcon />} />\n          <BottomNavigationAction label=\"Explore\" icon={<ExploreIcon />} />\n          <BottomNavigationAction label=\"Bookmarks\" icon={<BookmarkIcon />} />\n        </BottomNavigation>\n      </div>\n    </Hidden>\n  );\n};\n\nexport default FooterNavBar;\n","C:\\scratch\\Code\\Tweeder\\src\\Post.tsx",["150","151"],"import React, { useEffect, useState, useContext } from \"react\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\nimport AutorenewIcon from \"@material-ui/icons/Autorenew\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport PostImage from \"./PostImage\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Shared from \"./Shared.module.scss\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst Post = (props) => {\n  const [OpenComments, SetOpenComments] = useState(false);\n\n  const RenderPost = () => {\n    if (props.PostType === \"Image\") {\n      return (\n        <PostImage\n          PostMessage=\"I like Cheese, Cows and Milk\"\n          Images={[\n            {\n              original:\n                \"https://shellstorage123.blob.core.windows.net/portfoliopics/socialmedia/SM_Vid (1).JPEG\",\n              thumbnail:\n                \"https://shellstorage123.blob.core.windows.net/portfoliopics/socialmedia/SM_Vid (1).JPEG\",\n              description: \"Starting Video Call\",\n              ProjectGithubLink: \"https://github.com/dim505/SocialMedia\",\n              ProjectLiveLink: \"https://socialmediafrontend.azurewebsites.net/\"\n            },\n            {\n              original:\n                \"https://shellstorage123.blob.core.windows.net/portfoliopics/socialmedia/SM_Vid (2).JPEG\",\n              thumbnail:\n                \"https://shellstorage123.blob.core.windows.net/portfoliopics/socialmedia/SM_Vid (2).JPEG\",\n              description: \"\",\n              ProjectGithubLink: \"https://github.com/dim505/SocialMedia\",\n              ProjectLiveLink: \"https://socialmediafrontend.azurewebsites.net/\"\n            },\n            {\n              original:\n                \"https://shellstorage123.blob.core.windows.net/portfoliopics/socialmedia/SM_Vid (3).JPEG\",\n              thumbnail:\n                \"https://shellstorage123.blob.core.windows.net/portfoliopics/socialmedia/SM_Vid (3).JPEG\",\n              description: \"\",\n              ProjectGithubLink: \"https://github.com/dim505/SocialMedia\",\n              ProjectLiveLink: \"https://socialmediafrontend.azurewebsites.net/\"\n            },\n            {\n              original:\n                \"https://shellstorage123.blob.core.windows.net/portfoliopics/socialmedia/SM_Vid (4).JPEG\",\n              thumbnail:\n                \"https://shellstorage123.blob.core.windows.net/portfoliopics/socialmedia/SM_Vid (4).JPEG\",\n              description: \"Other Participant is joining\",\n              ProjectGithubLink: \"https://github.com/dim505/SocialMedia\",\n              ProjectLiveLink: \"https://socialmediafrontend.azurewebsites.net/\"\n            },\n            {\n              original:\n                \"https://shellstorage123.blob.core.windows.net/portfoliopics/socialmedia/SM_Vid (5).JPEG\",\n              thumbnail:\n                \"https://shellstorage123.blob.core.windows.net/portfoliopics/socialmedia/SM_Vid (5).JPEG\",\n              description: \"\",\n              ProjectGithubLink: \"https://github.com/dim505/SocialMedia\",\n              ProjectLiveLink: \"https://socialmediafrontend.azurewebsites.net/\"\n            }\n          ]}\n        />\n      );\n    } else {\n      return (\n        <Typography\n          classes={{\n            root: \"TextAllignLeft\"\n          }}\n          variant=\"body2\"\n          component=\"p\"\n        >\n          INEEEEEEE\n        </Typography>\n      );\n    }\n  };\n\n  return (\n    <Paper classes={{ root: Shared.PostContainer }} elevation={0}>\n      <CardHeader\n        avatar={\n          <Avatar\n            variant=\"rounded\"\n            src=\"https://i.pinimg.com/originals/d8/ab/6a/d8ab6a527914cba58261361792653287.jpg\"\n            alt=\"derp\"\n          />\n        }\n        classes={{\n          root: \"TextAllignLeft\"\n        }}\n        title=\"derp\"\n        subheader={\"August 20, 2020 at 20:43 \"}\n      />{\" \"}\n      <CardContent>\n        {\" \"}\n        {RenderPost()}\n        <Typography\n          align=\"right\"\n          variant=\"caption\"\n          display=\"block\"\n          gutterBottom\n        >\n          449 Comments 59k Retweets 234 Saved\n        </Typography>\n        <Divider />\n        <div className={Shared.PostButtonsContainer}>\n          <Hidden lgUp={true}>\n            <Tooltip title=\"Comments\">\n              <IconButton\n                onClick={() => {\n                  SetOpenComments(!OpenComments);\n                }}\n              >\n                <CommentIcon />\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"Retweet\">\n              <IconButton classes={{ root: Shared.RetweetBtn }}>\n                <AutorenewIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Liked\">\n              <IconButton classes={{ root: Shared.LikedBtn }}>\n                <FavoriteBorderIcon />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Saved\">\n              <IconButton classes={{ root: Shared.SavedBtn }}>\n                <BookmarkBorderIcon />\n              </IconButton>\n            </Tooltip>\n          </Hidden>\n\n          <Hidden mdDown={true}>\n            {\" \"}\n            <Button\n              onClick={() => {\n                SetOpenComments(!OpenComments);\n              }}\n            >\n              {\" \"}\n              <CommentIcon /> <p> Comment</p>\n            </Button>\n            <Button classes={{ root: Shared.RetweetBtn }}>\n              {\" \"}\n              <AutorenewIcon /> <p> Retweeted</p>\n            </Button>\n            <Button classes={{ root: Shared.LikedBtn }}>\n              {\" \"}\n              <FavoriteBorderIcon /> <p> Liked</p>\n            </Button>\n            <Button classes={{ root: Shared.SavedBtn }}>\n              {\" \"}\n              <BookmarkBorderIcon /> <p> Saved</p>\n            </Button>\n          </Hidden>\n        </div>\n        <Divider />\n      </CardContent>\n      <Collapse in={OpenComments}>\n        <CardHeader\n          avatar={<Avatar variant=\"rounded\" alt=\"\" src=\"\"></Avatar>}\n          classes={{\n            root: \"TextAllignLeft\"\n          }}\n          title={\n            <>\n              <div className={Shared.DisplayCommentTextBox}>\n                <div>\n                  <Typography display=\"inline\" variant=\"subtitle1\" gutterBottom>\n                    Bob Smithty {\"        \"}\n                  </Typography>\n\n                  <Typography display=\"inline\" variant=\"caption\" gutterBottom>\n                    August 20, 2020 at 20:43\n                  </Typography>\n                </div>\n                <Typography variant=\"body2\" gutterBottom>\n                  This is a test comment. TEST TESTTESTTESTTESTTEST\n                  TESTTESTTESTTESTTESTTESTTEST\n                </Typography>\n              </div>\n\n              <Button size=\"small\" classes={{ root: Shared.LikedBtn }}>\n                {\" \"}\n                <FavoriteBorderIcon /> Liked\n              </Button>\n\n              <Typography display=\"inline\" variant=\"caption\" gutterBottom>\n                12.3 Likes\n              </Typography>\n            </>\n          }\n        />\n        <CardHeader\n          avatar={<Avatar variant=\"rounded\" alt=\"\" src=\"\"></Avatar>}\n          classes={{\n            root: \"TextAllignLeft\"\n          }}\n          title={\n            <div>\n              <InputBase\n                fullWidth={true}\n                multiline={true}\n                value=\"\"\n                classes={{ root: Shared.AddCommentTextBox }}\n                placeholder=\"Tweet Your Reply\"\n                endAdornment={\n                  <IconButton>\n                    <ImageIcon />\n                  </IconButton>\n                }\n              />\n            </div>\n          }\n        />\n      </Collapse>\n    </Paper>\n  );\n};\n\nexport default Post;\n","C:\\scratch\\Code\\Tweeder\\src\\footer.tsx",[],"C:\\scratch\\Code\\Tweeder\\src\\Profile.tsx",["152","153","154","155","156","157"],"C:\\scratch\\Code\\Tweeder\\src\\PostImage.tsx",[],"C:\\scratch\\Code\\projects\\SmallReactApps\\YoutubeClone\\src\\index.tsx",[],["158","159"],"C:\\scratch\\Code\\projects\\SmallReactApps\\YoutubeClone\\src\\App.tsx",["160","161","162","163","164"],"import React, { useEffect, useState, useContext } from \"react\";\nimport Header from \"./Components/Header/Header\";\nimport RecommendedVideos from \"./Components/RecommendedVideo/RecommendedVideos\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SearchPageResults from \"./Components/SearchPageResults/SearchPageResults.tsx\";\nimport VideoPlayer from \"./Components/VideoPlayer/VideoPlayer\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"./Global.scss\";\nimport Fade from \"@mui/material/Fade\";\n//root parent that contains all the routes for the app\nconst App = () => {\n  return (\n    <>\n      <Router>\n        <Header />\n        <Route exact path=\"/\">\n          <Grid container>\n            <RecommendedVideos\n              Location=\"home\"\n              BreakPoints={{ xs: 12, sm: 6, md: 4 }}\n            />\n          </Grid>\n        </Route>\n        <Route path=\"/search/:searchQuery\">\n          <SearchPageResults />\n        </Route>\n\n        <Route path=\"/video/:videoId\">\n          <VideoPlayer />\n        </Route>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","C:\\scratch\\Code\\projects\\SmallReactApps\\YoutubeClone\\src\\Shared\\appState.js",["165","166","167"],"import { observable, action, computed } from \"mobx\";\nimport { ApiCall } from \"./ApiCall\";\nimport { createContext } from \"react\";\n\n\nclass AppState \n{\n  @observable SearchTerm = \"\";\n\n  SetSearchTerm = (SearchTerm) => {\n    this.SearchTerm = SearchTerm\n\n  }\n}\n\nconst AppStateContext = createContext(new AppState())\nexport default AppStateContext",["168","169"],"C:\\scratch\\Code\\projects\\SmallReactApps\\YoutubeClone\\src\\Shared\\ApiCall.js",[],["170","171"],"C:\\scratch\\Code\\projects\\SmallReactApps\\YoutubeClone\\src\\Components\\Header\\Header.tsx",["172","173","174","175","176"],"import IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport HeaderCss from \"./Header.module.scss\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport WorkOutlineOutlinedIcon from \"@material-ui/icons/WorkOutlineOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppStateContext from \"../../Shared/appState\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//contains the nav bar and search bar\r\nconst Header = () => {\r\n  const AppState = useContext(AppStateContext);\r\n  //keeps track of what the user searched\r\n  const [SearchTerm, SetSearchTerm] = useState(\"\");\r\n  return (\r\n    <div>\r\n      <Grid container={true} justifyContent=\"space-between\">\r\n        <Grid xs item>\r\n          <div>\r\n            <Link to={\"/\"}>\r\n              <IconButton>\r\n                <img\r\n                  className={HeaderCss.header_HomeIcon}\r\n                  src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e1/Logo_of_YouTube_%282015-2017%29.svg/502px-Logo_of_YouTube_%282015-2017%29.svg.png\"\r\n                />\r\n              </IconButton>\r\n            </Link>\r\n          </div>\r\n        </Grid>\r\n        <Grid xs item>\r\n          <div className={HeaderCss.SearchBar}>\r\n            <InputBase\r\n              endAdornment={\r\n                <div className={HeaderCss.SearchBar_Icon}>\r\n                  <Link to={`/search/${SearchTerm}`}>\r\n                    <IconButton>\r\n                      <SearchIcon />\r\n                    </IconButton>\r\n                  </Link>\r\n                </div>\r\n              }\r\n              classes={{\r\n                root: HeaderCss.SearchBar_InputRoot,\r\n                input: HeaderCss.SearchBar_Input,\r\n              }}\r\n              value={SearchTerm}\r\n              onChange={(event) => {\r\n                SetSearchTerm(event.target.value);\r\n                AppState.SetSearchTerm(event.target.value);\r\n              }}\r\n              placeholder=\"Search\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid xs item />\r\n      </Grid>\r\n      <Divider variant=\"inset\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\scratch\\Code\\projects\\SmallReactApps\\YoutubeClone\\src\\Components\\RecommendedVideo\\RecommendedVideos.tsx",["177","178","179","180","181"],"import React, { useEffect, useState } from \"react\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport axios from \"axios\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport VideoCard from \"./VideoCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Fade from \"@mui/material/Fade\";\r\nimport moment from \"moment\";\r\nimport numeral from \"numeral\";\r\nimport CSS from \"./RecommendedVideo.module.scss\";\r\n//parents that will display recommended videos for related youtube video that the user is watching\r\nconst RecommendedVideos = (props) => {\r\n  //holds the video data for the recommeded video\r\n  const [VideoData, SetVideoData] = useState([]);\r\n  //displays loader\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  //shows error when it errors out\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    //shows loader \r\n    setIsLoading(true);\r\n    var url = \"\";\r\n    //changes URL depending on where its being used \r\n    if (props.Location == \"home\") {\r\n      url = `https://www.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&chart=mostPopular&maxResults=12&regionCode=US&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`;\r\n    } else {\r\n      url = `https://www.googleapis.com/youtube/v3/search?part=snippet&relatedToVideoId=${props.VideoID}&type=video&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`;\r\n    }\r\n    //makes API call\r\n    axios\r\n      .get(url)\r\n      .then((response) => {\r\n        console.log(response);\r\n        //SetVideoData(response.data.items)\r\n        //builds out information from response \r\n        createVideoCards(response.data.items);\r\n      })\r\n      .catch((error) => {\r\n        //turns off loader\r\n        setIsLoading(false);\r\n        //shows error message\r\n        setIsError(true);\r\n      });\r\n  }, [props.Location, props.VideoID]);\r\n\r\n  //extracts information from API response \r\n  async function createVideoCards(videoItems) {\r\n    let newVideoCards = [];\r\n    for (const video of videoItems) {\r\n      //sometimes the API returns bad data, this skips that \r\n      if (video.snippet == undefined) {\r\n        continue;\r\n      }\r\n      var videoId = \"\";\r\n      //diff in data format for sidebar and home page data\r\n      if (props.Location == \"sidebar\") {\r\n        videoId = video.id.videoId;\r\n      } else {\r\n        videoId = video.id;\r\n      }\r\n      const snippet = video.snippet;\r\n      const channelId = snippet.channelId;\r\n      const response = await axios.get(\r\n        `https://www.googleapis.com/youtube/v3/channels?part=snippet&id=${channelId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`\r\n      );\r\n      const channelImage = response.data.items[0].snippet.thumbnails.medium.url;\r\n\r\n      const title = snippet.title;\r\n      const image = snippet.thumbnails.medium.url;\r\n      var views = \"\";\r\n      if (props.Location == \"home\") {\r\n        views = numeral(video.statistics.viewCount).format(\"0a\") + \" | views\";\r\n      }\r\n\r\n      const timestamp = moment(snippet.publishedAt, \"YYYY-MM-DD\").fromNow();\r\n      const channel = snippet.channelTitle;\r\n\r\n      newVideoCards.push({\r\n        videoId,\r\n        image,\r\n        title,\r\n        channel,\r\n        views,\r\n        timestamp,\r\n        channelImage,\r\n      });\r\n    }\r\n    SetVideoData(newVideoCards);\r\n    setIsLoading(false);\r\n  }\r\n//returns error is error flag is set\r\n  if (isError) {\r\n    return (\r\n      <Alert severity=\"error\" className=\"loading\">\r\n        No Results found!\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <div className={CSS.Loader}>\r\n          <CircularProgress size=\"200px\" />\r\n        </div>\r\n      ) : (\r\n        <div />\r\n      )}\r\n\r\n      {VideoData.map((SingleVideo) => {\r\n        return (\r\n          <Fade in={true}>\r\n            <Grid\r\n              item\r\n              xs={props.BreakPoints.xs}\r\n              sm={props.BreakPoints.sm}\r\n              md={props.BreakPoints.md}\r\n            >\r\n              <VideoCard SingleVideo={SingleVideo} />\r\n            </Grid>\r\n          </Fade>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecommendedVideos;\r\n","C:\\scratch\\Code\\projects\\SmallReactApps\\YoutubeClone\\src\\Components\\SearchPageResults\\SearchPageResults.tsx",["182"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CSS from \"./SearchPageResults.module.scss\";\r\nimport moment from \"moment\";\r\nimport numeral from \"numeral\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Fade from \"@mui/material/Fade\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\n//displays results from the search query\r\nconst SearchPageResults = () => {\r\n  //gets the query that the user searched for\r\n  var SearchQuery = useParams();\r\n  //stores the video information data\r\n  const [VideoRows, setVideoRows] = useState([]);\r\n  //shows the loader\r\n  const [IsLoading, setIsLoading] = useState(false);\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    //makes API call to get data for search term\r\n    axios\r\n      .get(\r\n        `https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=9&type=video&q=${SearchQuery.searchQuery}&safeSearch=none&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`\r\n      )\r\n      .then((response) => {\r\n        //extracts the needed data\r\n        createVideoRows(response.data[\"items\"]);\r\n\r\n        //setIsError(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        //setIsError(true);\r\n      });\r\n  }, [SearchQuery]);\r\n\r\n  //extracts the needed information from the API response\r\n  async function createVideoRows(videos) {\r\n    let newVideoRows = [];\r\n    for (const video of videos) {\r\n      const videoId = video.id.videoId;\r\n      const response = await axios.get(\r\n        `https://www.googleapis.com/youtube/v3/videos?part=statistics%2C%20snippet&id=${videoId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`\r\n      );\r\n      const views = response.data.items[0].statistics.viewCount;\r\n      const snippet = video.snippet;\r\n      const title = snippet.title;\r\n      const timestamp = snippet.publishedAt;\r\n      const channel = snippet.channelTitle;\r\n      const description = snippet.description;\r\n      const image = snippet.thumbnails.medium.url;\r\n\r\n      newVideoRows.push({\r\n        videoId,\r\n        title,\r\n        image,\r\n        views,\r\n        timestamp,\r\n        channel,\r\n        description,\r\n      });\r\n    }\r\n    setVideoRows(newVideoRows);\r\n    setIsLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {IsLoading ? <LinearProgress /> : null}\r\n\r\n      <Grid justifyContent=\"center\" container>\r\n        {VideoRows.map((video) => {\r\n          return (\r\n            <>\r\n              <Grid item sm={2} />\r\n              <Grid item xs={12} sm={8}>\r\n                <Fade timeout={1000} in={!IsLoading}>\r\n                  <Grid\r\n                    classes={{ root: CSS.SearchPageResults_VideoContainer }}\r\n                    container\r\n                  >\r\n                    <Grid item xs={4}>\r\n                      <Link to={`/video/:${video.videoId}`}>\r\n                        <img src={video.image} width=\"100%\" height=\"100%\" />\r\n                      </Link>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                      <div className={CSS.SearchPageResults_VideoContent}>\r\n                        <Typography\r\n                          variant=\"body1\"\r\n                          gutterBottom\r\n                          component=\"div\"\r\n                        >\r\n                          <strong> {video.title} </strong>\r\n                        </Typography>\r\n\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          gutterBottom\r\n                          component=\"div\"\r\n                        >\r\n                          {video.channel} | {numeral(video.views).format(\"0a\")}{\" \"}\r\n                          | {moment(video.timestamp, \"YYYY-MM-DD\").fromNow()}\r\n                        </Typography>\r\n\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          gutterBottom\r\n                          component=\"div\"\r\n                        >\r\n                          {video.description}\r\n                        </Typography>\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Fade>\r\n              </Grid>\r\n              <Grid item sm={2} />\r\n            </>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchPageResults;\r\n","C:\\scratch\\Code\\projects\\SmallReactApps\\YoutubeClone\\src\\Components\\VideoPlayer\\VideoPlayer.tsx",["183","184","185","186"],"import Grid from \"@material-ui/core/Grid\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport RecommendedVideos from \"../RecommendedVideo/RecommendedVideos\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router\";\r\nimport ThumbDownOffAltIcon from \"@material-ui/icons/ThumbDown\";\r\nimport ThumbUpOffAltIcon from \"@material-ui/icons/ThumbUp\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport moment from \"moment\";\r\nimport numeral from \"numeral\";\r\nimport Hidden from '@mui/material/Hidden';\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport CSS from \"./VideoPlayer.module.scss\";\r\nimport Fade from \"@mui/material/Fade\";\r\n//displays the video to be played \r\nconst VideoPlayer = () => {\r\n  //gets the video ID\r\n  let { videoId } = useParams();\r\n  //shows the video info\r\n  const [videoInfo, setVideoInfo] = useState([]);\r\n  //shows loader\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  //shows error message \r\n  const [isError, setIsError] = useState(false);\r\n\r\n  //gets info related to the playing video \r\n  useEffect(() => {\r\n    setVideoInfo([]);\r\n    setIsLoading(true);\r\n    axios\r\n      .get(\r\n        `https://www.googleapis.com/youtube/v3/videos?part=snippet%2C%20statistics&id=${videoId.replace(\r\n          \":\",\r\n          \"\"\r\n        )}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`\r\n      )\r\n      .then((response) => {\r\n        //formats the response data\r\n        createVideoInfo(response.data[\"items\"][0]);\r\n        setIsError(false);\r\n      })\r\n      .catch((error) => {\r\n        setIsError(true);\r\n      });\r\n  }, [videoId]);\r\n  //formats the response data\r\n  async function createVideoInfo(video) {\r\n    const snippet = video.snippet;\r\n    const stats = video.statistics;\r\n    const channelId = snippet.channelId;\r\n    const response = await axios.get(\r\n      `https://www.googleapis.com/youtube/v3/channels?part=snippet%2C%20statistics&id=${channelId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`\r\n    );\r\n\r\n    const channelImage = response.data.items[0].snippet.thumbnails.medium.url;\r\n    const subs = response.data.items[0].statistics.subscriberCount;\r\n    const publishedDate = new Date(snippet.publishedAt).toLocaleDateString(\r\n      \"en-GB\",\r\n      {\r\n        day: \"numeric\",\r\n        month: \"short\",\r\n        year: \"numeric\",\r\n      }\r\n    );\r\n    const title = snippet.title;\r\n    const description = snippet.description;\r\n    const channelTitle = snippet.channelTitle;\r\n    const viewCount = stats.viewCount;\r\n    const likeCount = stats.likeCount;\r\n    const dislikeCount = stats.dislikeCount;\r\n\r\n    setVideoInfo({\r\n      title,\r\n      description,\r\n      publishedDate,\r\n      channelTitle,\r\n      channelImage,\r\n      viewCount,\r\n      likeCount,\r\n      dislikeCount,\r\n      subs,\r\n    });\r\n    setIsLoading(false);\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <Hidden only={[\"xs\", \"sm\"]}>\r\n      <Grid item  md={1}/>\r\n      </Hidden>\r\n\r\n      <Fade timeout={1000} in={true}>\r\n        <Grid item xs={12} sm={9} md={7}>\r\n        \r\n          <div className={CSS.VideoContainer}>\r\n            <iframe\r\n              src={`https://www.youtube.com/embed/${videoId.replace(\":\", \"\")}`}\r\n              allowFullScreen\r\n            />\r\n          </div>\r\n          <Typography\r\n            classes={{ root: CSS.VideoStatContainer }}\r\n            variant=\"body2\"\r\n            gutterBottom\r\n          >\r\n            {numeral(videoInfo.viewCount).format(\"0,0\")} Views |{\" \"}\r\n            {moment(videoInfo.publishedDate).format(\"MMM Do YYYY\")} |{\" \"}\r\n            <div className={CSS.TextSpace}>\r\n              {\" \"}\r\n              <ThumbUpOffAltIcon /> {numeral(videoInfo.likeCount).format(\r\n                \"0a\"\r\n              )}{\" \"}\r\n            </div>\r\n            |{\" \"}\r\n            <div className={CSS.TextSpace}>\r\n              {\" \"}\r\n              <ThumbDownOffAltIcon />{\" \"}\r\n              {numeral(videoInfo.dislikeCount).format(\"0a\")}\r\n            </div>\r\n          </Typography>\r\n\r\n          <div className={CSS.VideoStatContainer}>\r\n            <Avatar src={videoInfo.channelImage} />\r\n\r\n            <div className={CSS.ChannelInfo}>\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                <strong> {videoInfo.channelTitle} </strong>\r\n              </Typography>\r\n\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                {numeral(videoInfo.subs).format(\"0a\")} Subscribers\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            {videoInfo.description}\r\n          </Typography>\r\n        \r\n        \r\n        </Grid>\r\n      </Fade>\r\n      <Grid item xs={12} md={3} sm={3}>\r\n        <RecommendedVideos\r\n          VideoID={videoId.replace(\":\", \"\")}\r\n          Location=\"sidebar\"\r\n          BreakPoints={{ xs: 12, sm: 12, md: 12 }}\r\n        />\r\n      </Grid>\r\n      <Hidden only={[\"xs\", \"sm\"]}>\r\n      <Grid item   md={1}/>\r\n      </Hidden>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n","C:\\scratch\\Code\\projects\\SmallReactApps\\YoutubeClone\\src\\Components\\RecommendedVideo\\VideoCard.tsx",["187","188","189"],"import { useEffect, useState } from \"react\";\r\nimport css from \"./RecommendedVideo.module.scss\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\n\r\n//presents the information in a readable format in the form of a card\r\nimport { Link } from \"react-router-dom\";\r\nconst VideoCard = (props) => {\r\n  return (\r\n    <div className={css.VideoCard}>\r\n      <Link to={`/video/:${props.SingleVideo.videoId}`}>\r\n        <img src={props.SingleVideo.image} width=\"100%\" height=\"100%\" />\r\n      </Link>\r\n      <div className={css.VideoCard_Content}>\r\n        {\" \"}\r\n        <Avatar\r\n          classes={{ root: css.VideoCard_ChannelAvatar }}\r\n          src={props.SingleVideo.channelImage}\r\n        />\r\n        <div>\r\n          <Typography variant=\"body2\" gutterBottom component=\"div\">\r\n            <strong> {props.SingleVideo.title} </strong>\r\n          </Typography>\r\n\r\n          <Typography variant=\"body2\" gutterBottom component=\"div\">\r\n            {props.SingleVideo.channel}\r\n          </Typography>\r\n\r\n          <Typography variant=\"body2\" gutterBottom component=\"div\">\r\n            {props.SingleVideo.views} {props.SingleVideo.timestamp}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCard;\r\n",{"ruleId":"190","severity":1,"message":"191","line":1,"column":30,"nodeType":"192","messageId":"193","endLine":1,"endColumn":38},{"ruleId":"190","severity":1,"message":"194","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":17},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"190","severity":1,"message":"199","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":26},{"ruleId":"190","severity":1,"message":"200","line":1,"column":38,"nodeType":"192","messageId":"193","endLine":1,"endColumn":48},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"201","severity":1,"message":"199","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":26},{"ruleId":"201","severity":1,"message":"202","line":1,"column":28,"nodeType":"192","messageId":"193","endLine":1,"endColumn":36},{"ruleId":"201","severity":1,"message":"200","line":1,"column":38,"nodeType":"192","messageId":"193","endLine":1,"endColumn":48},{"ruleId":"201","severity":1,"message":"203","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":24},{"ruleId":"201","severity":1,"message":"204","line":8,"column":8,"nodeType":"192","messageId":"193","endLine":8,"endColumn":19},{"ruleId":"201","severity":1,"message":"205","line":10,"column":8,"nodeType":"192","messageId":"193","endLine":10,"endColumn":19},{"ruleId":"201","severity":1,"message":"206","line":19,"column":8,"nodeType":"192","messageId":"193","endLine":19,"endColumn":19},{"ruleId":"201","severity":1,"message":"207","line":20,"column":8,"nodeType":"192","messageId":"193","endLine":20,"endColumn":21},{"ruleId":"201","severity":1,"message":"208","line":21,"column":8,"nodeType":"192","messageId":"193","endLine":21,"endColumn":26},{"ruleId":"201","severity":1,"message":"209","line":22,"column":8,"nodeType":"192","messageId":"193","endLine":22,"endColumn":17},{"ruleId":"201","severity":1,"message":"210","line":30,"column":8,"nodeType":"192","messageId":"193","endLine":30,"endColumn":26},{"ruleId":"211","severity":1,"message":"212","line":229,"column":15,"nodeType":"213","endLine":232,"endColumn":17},{"ruleId":"211","severity":1,"message":"212","line":264,"column":15,"nodeType":"213","endLine":267,"endColumn":17},{"ruleId":"201","severity":1,"message":"214","line":20,"column":10,"nodeType":"192","messageId":"193","endLine":20,"endColumn":15},{"ruleId":"215","severity":1,"message":"216","line":25,"column":13,"nodeType":"217","endLine":45,"endColumn":4},{"ruleId":"215","severity":1,"message":"218","line":45,"column":6,"nodeType":"219","endLine":45,"endColumn":8,"suggestions":"220"},{"ruleId":"221","severity":1,"message":"222","line":46,"column":3,"nodeType":"223","messageId":"224","endLine":48,"endColumn":4},{"ruleId":"201","severity":1,"message":"225","line":50,"column":9,"nodeType":"192","messageId":"193","endLine":50,"endColumn":21},{"ruleId":"201","severity":1,"message":"199","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":26},{"ruleId":"201","severity":1,"message":"202","line":1,"column":28,"nodeType":"192","messageId":"193","endLine":1,"endColumn":36},{"ruleId":"201","severity":1,"message":"199","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":26},{"ruleId":"201","severity":1,"message":"202","line":1,"column":28,"nodeType":"192","messageId":"193","endLine":1,"endColumn":36},{"ruleId":"201","severity":1,"message":"226","line":10,"column":8,"nodeType":"192","messageId":"193","endLine":10,"endColumn":25},{"ruleId":"201","severity":1,"message":"199","line":8,"column":17,"nodeType":"192","messageId":"193","endLine":8,"endColumn":26},{"ruleId":"201","severity":1,"message":"200","line":8,"column":38,"nodeType":"192","messageId":"193","endLine":8,"endColumn":48},{"ruleId":"201","severity":1,"message":"227","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":20},{"ruleId":"201","severity":1,"message":"199","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":26},{"ruleId":"201","severity":1,"message":"200","line":1,"column":38,"nodeType":"192","messageId":"193","endLine":1,"endColumn":48},{"ruleId":"201","severity":1,"message":"199","line":7,"column":17,"nodeType":"192","messageId":"193","endLine":7,"endColumn":26},{"ruleId":"201","severity":1,"message":"200","line":7,"column":38,"nodeType":"192","messageId":"193","endLine":7,"endColumn":48},{"ruleId":"228","severity":1,"message":"229","line":22,"column":7,"nodeType":"213","endLine":27,"endColumn":9},{"ruleId":"228","severity":1,"message":"229","line":32,"column":13,"nodeType":"213","endLine":38,"endColumn":15},{"ruleId":"230","severity":1,"message":"231","line":50,"column":25,"nodeType":"232","endLine":50,"endColumn":37},{"ruleId":"230","severity":1,"message":"231","line":60,"column":25,"nodeType":"232","endLine":60,"endColumn":37},{"ruleId":"195","replacedBy":"233"},{"ruleId":"197","replacedBy":"234"},{"ruleId":"201","severity":1,"message":"199","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":26},{"ruleId":"201","severity":1,"message":"202","line":1,"column":28,"nodeType":"192","messageId":"193","endLine":1,"endColumn":36},{"ruleId":"201","severity":1,"message":"200","line":1,"column":38,"nodeType":"192","messageId":"193","endLine":1,"endColumn":48},{"ruleId":"201","severity":1,"message":"235","line":4,"column":35,"nodeType":"192","messageId":"193","endLine":4,"endColumn":41},{"ruleId":"201","severity":1,"message":"236","line":9,"column":8,"nodeType":"192","messageId":"193","endLine":9,"endColumn":12},{"ruleId":"190","severity":1,"message":"237","line":1,"column":22,"nodeType":"192","messageId":"193","endLine":1,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":1,"column":30,"nodeType":"192","messageId":"193","endLine":1,"endColumn":38},{"ruleId":"190","severity":1,"message":"194","line":2,"column":10,"nodeType":"192","messageId":"193","endLine":2,"endColumn":17},{"ruleId":"195","replacedBy":"233"},{"ruleId":"197","replacedBy":"234"},{"ruleId":"195","replacedBy":"238"},{"ruleId":"197","replacedBy":"239"},{"ruleId":"201","severity":1,"message":"240","line":2,"column":8,"nodeType":"192","messageId":"193","endLine":2,"endColumn":16},{"ruleId":"201","severity":1,"message":"199","line":5,"column":27,"nodeType":"192","messageId":"193","endLine":5,"endColumn":36},{"ruleId":"201","severity":1,"message":"241","line":6,"column":8,"nodeType":"192","messageId":"193","endLine":6,"endColumn":31},{"ruleId":"201","severity":1,"message":"242","line":7,"column":8,"nodeType":"192","messageId":"193","endLine":7,"endColumn":14},{"ruleId":"211","severity":1,"message":"212","line":26,"column":17,"nodeType":"213","endLine":29,"endColumn":19},{"ruleId":"243","severity":1,"message":"244","line":25,"column":24,"nodeType":"245","messageId":"246","endLine":25,"endColumn":26},{"ruleId":"215","severity":1,"message":"247","line":45,"column":6,"nodeType":"219","endLine":45,"endColumn":37,"suggestions":"248"},{"ruleId":"243","severity":1,"message":"244","line":52,"column":25,"nodeType":"245","messageId":"246","endLine":52,"endColumn":27},{"ruleId":"243","severity":1,"message":"244","line":57,"column":26,"nodeType":"245","messageId":"246","endLine":57,"endColumn":28},{"ruleId":"243","severity":1,"message":"244","line":72,"column":26,"nodeType":"245","messageId":"246","endLine":72,"endColumn":28},{"ruleId":"211","severity":1,"message":"212","line":86,"column":25,"nodeType":"213","endLine":86,"endColumn":77},{"ruleId":"201","severity":1,"message":"200","line":2,"column":38,"nodeType":"192","messageId":"193","endLine":2,"endColumn":48},{"ruleId":"201","severity":1,"message":"249","line":22,"column":10,"nodeType":"192","messageId":"193","endLine":22,"endColumn":19},{"ruleId":"201","severity":1,"message":"250","line":24,"column":10,"nodeType":"192","messageId":"193","endLine":24,"endColumn":17},{"ruleId":"251","severity":1,"message":"252","line":96,"column":13,"nodeType":"213","endLine":99,"endColumn":15},{"ruleId":"201","severity":1,"message":"199","line":1,"column":10,"nodeType":"192","messageId":"193","endLine":1,"endColumn":19},{"ruleId":"201","severity":1,"message":"202","line":1,"column":21,"nodeType":"192","messageId":"193","endLine":1,"endColumn":29},{"ruleId":"211","severity":1,"message":"212","line":12,"column":9,"nodeType":"213","endLine":12,"endColumn":73},"no-unused-vars","'computed' is defined but never used.","Identifier","unusedVar","'ApiCall' is defined but never used.","no-native-reassign",["253"],"no-negated-in-lhs",["254"],"'useEffect' is defined but never used.","'useContext' is defined but never used.","@typescript-eslint/no-unused-vars","'useState' is defined but never used.","'PerfectScrollbar' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.","'CommentIcon' is defined but never used.","'AutorenewIcon' is defined but never used.","'FavoriteBorderIcon' is defined but never used.","'InputBase' is defined but never used.","'BookmarkBorderIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'value' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'appState'. Either include it or remove the dependency array.","ArrayExpression",["255"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'handleChange' is assigned a value but never used.","'ArrowDropDownIcon' is defined but never used.","'makeStyles' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["253"],["254"],"'Switch' is defined but never used.","'Fade' is defined but never used.","'action' is defined but never used.",["253"],["254"],"'MenuIcon' is defined but never used.","'WorkOutlineOutlinedIcon' is defined but never used.","'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'createVideoCards'. Either include it or remove the dependency array.",["256"],"'isLoading' is assigned a value but never used.","'isError' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation",{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},"Update the dependencies array to be: [appState]",{"range":"261","text":"262"},"Update the dependencies array to be: [createVideoCards, props.Location, props.VideoID]",{"range":"263","text":"264"},[1533,1535],"[appState]",[1805,1836],"[createVideoCards, props.Location, props.VideoID]"]